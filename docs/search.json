[
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Portfolio",
    "section": "",
    "text": "Vehicles emission affects to the climate change\n\n\n\nR\n\n\nStatistics\n\n\nMEDS\n\n\n\nImpact of CAFE standards on reducing carbon dioxide emissions and compare truck and car models relative to these standards.\n\n\n\nHaejin Kim\n\n\nDec 15, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMapping the global potential for marine aquaculture\n\n\n\nGeospatial\n\n\nR\n\n\nMEDS\n\n\n\nMapping global marine aquaculture potential, particularly on the West Coast of the US, focusing on optimal oyster cultivation in Exclusive Economic Zones.\n\n\n\nHaejin Kim\n\n\nDec 14, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAir Quality Analysis of Thomas Fire\n\n\n\nGeospetial\n\n\nData_Science\n\n\nMEDS\n\n\n\nVisualize the impact of the Thomas Fire on air quality in Santa Barbara County, California\n\n\n\nHaejin Kim\n\n\nDec 13, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Accessibility in North Korea\n\n\n\nNorth_Korea\n\n\nData_Science\n\n\nMEDS\n\n\n\nPolitical Challenges and Environment Data Accessibility in North Korea\n\n\n\nHaejin Kim\n\n\nDec 9, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2023-11-19-my-blog-post/index.html",
    "href": "posts/2023-11-19-my-blog-post/index.html",
    "title": "blog post title",
    "section": "",
    "text": "CitationBibTeX citation:@online{kim2023,\n  author = {Kim, Haejin},\n  title = {Blog Post Title},\n  date = {2023-11-08},\n  url = {https://khj9759.github.io/posts/2022-10-24-my-blog-post/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nKim, Haejin. 2023. “Blog Post Title.” November 8, 2023. https://khj9759.github.io/posts/2022-10-24-my-blog-post/."
  },
  {
    "objectID": "posts/python-note-render/STAC-search.html",
    "href": "posts/python-note-render/STAC-search.html",
    "title": "asb",
    "section": "",
    "text": "Code\nimport numpy as np\nimport geopandas as gpd\nimport rioxarray as rioxr\nimport matplotlib.pyplot as plt\n\nfrom shapely.geometry import Polygon\n\n# used to access STAC catalogs\nfrom pystac_client import Client\n# used to sign items from the MPC STAC catalog\nimport planetary_computer\n\n# other libraries for nice outputs\nfrom IPython.display import Image"
  },
  {
    "objectID": "posts/python-note-render/STAC-search.html#access",
    "href": "posts/python-note-render/STAC-search.html#access",
    "title": "asb",
    "section": "Access",
    "text": "Access\nWe use the Client function from the pystac_client package to access the catalog:\n\n\nCode\n# access catalog\ncatalog = Client.open(\n    \"https://planetarycomputer.microsoft.com/api/stac/v1\",\n    modifier = planetary_computer.sign_inplace)\n\n\nThe modifier parameter is needed to access the data in the MPC catalog."
  },
  {
    "objectID": "posts/python-note-render/STAC-search.html#exploration",
    "href": "posts/python-note-render/STAC-search.html#exploration",
    "title": "asb",
    "section": "Exploration",
    "text": "Exploration\nLet’s check out some of the catalog’s metadata:\n\n\nCode\n# metadata from the catalog\nprint('Title: ', catalog.title)\nprint('Description: ', catalog.description)\n\n\nTitle:  Microsoft Planetary Computer STAC API\nDescription:  Searchable spatiotemporal metadata describing Earth science datasets hosted by the Microsoft Planetary Computer\n\n\nWe can access the catalog’s collections by using the get_collections() method:\n\n\nCode\ncatalog.get_collections()\n\n\n&lt;generator object Client.get_collections at 0x151951250&gt;\n\n\nNotice the output of get_collections() is a generator.\nThis is a special kind of lazy obkect in Python over which you can loop over like a list. Unlike a list, the items in the generator do not exist in memory until you explicitely iterate over them or convert them to a list. Let’s try getting the collections from the catalog again:\n\n\nCode\n# get collections and print their names\ncollections = list(catalog.get_collections())\n\nprint('Number of collections: ', len(collections))\nprint('Collections IDs:')\n\nfor collection in collections:\n    print('- ', collection.id)\n\n\nNumber of collections:  122\nCollections IDs:\n-  daymet-annual-pr\n-  daymet-daily-hi\n-  3dep-seamless\n-  3dep-lidar-dsm\n-  fia\n-  sentinel-1-rtc\n-  gridmet\n-  daymet-annual-na\n-  daymet-monthly-na\n-  daymet-annual-hi\n-  daymet-monthly-hi\n-  daymet-monthly-pr\n-  gnatsgo-tables\n-  hgb\n-  cop-dem-glo-30\n-  cop-dem-glo-90\n-  goes-cmi\n-  terraclimate\n-  nasa-nex-gddp-cmip6\n-  gpm-imerg-hhr\n-  gnatsgo-rasters\n-  3dep-lidar-hag\n-  3dep-lidar-intensity\n-  3dep-lidar-pointsourceid\n-  mtbs\n-  noaa-c-cap\n-  3dep-lidar-copc\n-  modis-64A1-061\n-  alos-fnf-mosaic\n-  3dep-lidar-returns\n-  mobi\n-  landsat-c2-l2\n-  era5-pds\n-  chloris-biomass\n-  kaza-hydroforecast\n-  planet-nicfi-analytic\n-  modis-17A2H-061\n-  modis-11A2-061\n-  daymet-daily-pr\n-  3dep-lidar-dtm-native\n-  3dep-lidar-classification\n-  3dep-lidar-dtm\n-  gap\n-  modis-17A2HGF-061\n-  planet-nicfi-visual\n-  gbif\n-  modis-17A3HGF-061\n-  modis-09A1-061\n-  alos-dem\n-  alos-palsar-mosaic\n-  deltares-water-availability\n-  modis-16A3GF-061\n-  modis-21A2-061\n-  us-census\n-  jrc-gsw\n-  deltares-floods\n-  modis-43A4-061\n-  modis-09Q1-061\n-  modis-14A1-061\n-  hrea\n-  modis-13Q1-061\n-  modis-14A2-061\n-  sentinel-2-l2a\n-  modis-15A2H-061\n-  modis-11A1-061\n-  modis-15A3H-061\n-  modis-13A1-061\n-  daymet-daily-na\n-  nrcan-landcover\n-  modis-10A2-061\n-  ecmwf-forecast\n-  noaa-mrms-qpe-24h-pass2\n-  sentinel-1-grd\n-  nasadem\n-  io-lulc\n-  landsat-c2-l1\n-  drcog-lulc\n-  chesapeake-lc-7\n-  chesapeake-lc-13\n-  chesapeake-lu\n-  noaa-mrms-qpe-1h-pass1\n-  noaa-mrms-qpe-1h-pass2\n-  noaa-nclimgrid-monthly\n-  goes-glm\n-  usda-cdl\n-  eclipse\n-  esa-cci-lc\n-  esa-cci-lc-netcdf\n-  fws-nwi\n-  usgs-lcmap-conus-v13\n-  usgs-lcmap-hawaii-v10\n-  noaa-climate-normals-tabular\n-  noaa-climate-normals-netcdf\n-  noaa-climate-normals-gridded\n-  aster-l1t\n-  cil-gdpcir-cc-by-sa\n-  io-lulc-9-class\n-  io-biodiversity\n-  naip\n-  noaa-cdr-sea-surface-temperature-whoi\n-  noaa-cdr-ocean-heat-content\n-  cil-gdpcir-cc0\n-  cil-gdpcir-cc-by\n-  noaa-cdr-sea-surface-temperature-whoi-netcdf\n-  noaa-cdr-sea-surface-temperature-optimum-interpolation\n-  modis-10A1-061\n-  sentinel-5p-l2-netcdf\n-  sentinel-3-olci-wfr-l2-netcdf\n-  noaa-cdr-ocean-heat-content-netcdf\n-  sentinel-3-synergy-aod-l2-netcdf\n-  sentinel-3-synergy-v10-l2-netcdf\n-  sentinel-3-olci-lfr-l2-netcdf\n-  sentinel-3-sral-lan-l2-netcdf\n-  sentinel-3-slstr-lst-l2-netcdf\n-  sentinel-3-slstr-wst-l2-netcdf\n-  sentinel-3-sral-wat-l2-netcdf\n-  ms-buildings\n-  sentinel-3-slstr-frp-l2-netcdf\n-  sentinel-3-synergy-syn-l2-netcdf\n-  sentinel-3-synergy-vgp-l2-netcdf\n-  sentinel-3-synergy-vg1-l2-netcdf\n-  esa-worldcover"
  },
  {
    "objectID": "posts/python-note-render/STAC-search.html#collection",
    "href": "posts/python-note-render/STAC-search.html#collection",
    "title": "asb",
    "section": "Collection",
    "text": "Collection\nWe can select a single collection for exploration using the get_child() method for the catalog and the collection id as the parameter:\n\n\nCode\nnaip_collection = catalog.get_child('naip')\nnaip_collection\n\n\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"Collection\"\n        \n    \n                \n            \n                \n                    \n        \n            id\n            \"naip\"\n        \n    \n                \n            \n                \n                    \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n                \n            \n                \n                    \n        \n            description\n            \"The [National Agriculture Imagery Program](https://www.fsa.usda.gov/programs-and-services/aerial-photography/imagery-programs/naip-imagery/) (NAIP) provides U.S.-wide, high-resolution aerial imagery, with four spectral bands (R, G, B, IR).  NAIP is administered by the [Aerial Field Photography Office](https://www.fsa.usda.gov/programs-and-services/aerial-photography/) (AFPO) within the [US Department of Agriculture](https://www.usda.gov/) (USDA).  Data are captured at least once every three years for each state.  This dataset represents NAIP data from 2010-present, in [cloud-optimized GeoTIFF](https://www.cogeo.org/) format.\n\"\n        \n    \n                \n            \n                \n                    \n        \n            links\n            [] 6 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"items\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip/items\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"license\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://www.fsa.usda.gov/help/policies-and-links/\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Public Domain\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"describedby\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/dataset/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Human readable dataset overview and reference\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            stac_extensions\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/item-assets/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/table/v1.2.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            item_assets\n            \n        \n            \n                \n        \n            image\n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            title\n            \"RGBIR COG tile\"\n        \n    \n            \n        \n            \n                \n        \n            eo:bands\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"Red\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"red\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Green\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"green\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Blue\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"blue\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            name\n            \"NIR\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"nir\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"near-infrared\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            metadata\n            \n        \n            \n                \n        \n            type\n            \"text/plain\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"metadata\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            title\n            \"FGDC Metdata\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            thumbnail\n            \n        \n            \n                \n        \n            type\n            \"image/jpeg\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            msft:region\n            \"westeurope\"\n        \n    \n                \n            \n                \n                    \n        \n            msft:container\n            \"naip\"\n        \n    \n                \n            \n                \n                    \n        \n            msft:storage_account\n            \"naipeuwest\"\n        \n    \n                \n            \n                \n                    \n        \n            msft:short_description\n            \"NAIP provides US-wide, high-resolution aerial imagery.  This dataset includes NAIP images from 2010 to the present.\"\n        \n    \n                \n            \n                \n                    \n        \n            title\n            \"NAIP: National Agriculture Imagery Program\"\n        \n    \n                \n            \n                \n                    \n        \n            extent\n            \n        \n            \n                \n        \n            spatial\n            \n        \n            \n                \n        \n            bbox\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -124.784\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            24.744\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -66.951\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            49.346\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            temporal\n            \n        \n            \n                \n        \n            interval\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"2010-01-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"2021-12-31T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            license\n            \"proprietary\"\n        \n    \n                \n            \n                \n                    \n        \n            keywords\n            [] 7 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"NAIP\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"Aerial\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"Imagery\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \"USDA\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \"AFPO\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            \"Agriculture\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            \"United States\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            providers\n            [] 3 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"USDA Farm Service Agency\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"producer\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"licensor\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            url\n            \"https://www.fsa.usda.gov/programs-and-services/aerial-photography/imagery-programs/naip-imagery/\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Esri\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"processor\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            url\n            \"https://www.esri.com/\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Microsoft\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"host\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"processor\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            url\n            \"https://planetarycomputer.microsoft.com\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            summaries\n            \n        \n            \n                \n        \n            gsd\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            eo:bands\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"Red\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"red\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"visible red\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Green\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"green\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"visible green\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Blue\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"blue\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"visible blue\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            name\n            \"NIR\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"nir\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"near-infrared\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            assets\n            \n        \n            \n                \n        \n            thumbnail\n            \n        \n            \n                \n        \n            href\n            \"https://ai4edatasetspublicassets.blob.core.windows.net/assets/pc_thumbnails/naip.png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"NAIP thumbnail\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geoparquet-items\n            \n        \n            \n                \n        \n            href\n            \"abfs://items/naip.parquet\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/x-parquet\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"GeoParquet STAC items\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Snapshot of the collection's STAC items exported to GeoParquet format.\"\n        \n    \n            \n        \n            \n                \n        \n            msft:partition_info\n            \n        \n            \n                \n        \n            is_partitioned\n            True\n        \n    \n            \n        \n            \n                \n        \n            partition_frequency\n            \"AS\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            table:storage_options\n            \n        \n            \n                \n        \n            account_name\n            \"pcstacitems\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"stac-items\""
  },
  {
    "objectID": "posts/python-note-render/STAC-search.html#catalog-search",
    "href": "posts/python-note-render/STAC-search.html#catalog-search",
    "title": "asb",
    "section": "Catalog search",
    "text": "Catalog search\nWe can narrow the search within the catalog by specifying a time range, an area of interest, and the collection name. The simplest way to define the are of interest to look for in the catalog are:\n\na GeoJSON-type dictionary with coordinates of the bounding box\nas a list [xmin, ymin, xmax, ymax] with the coordinate values definind the four corners of the bounding box.\n\nYou could also use a point, or some more complex polygon.\nIn this lesson we will look for NAIP scenes over Santa Barbara from 2018 to 2020. We’ll use the GeoJSON method: to define the area of interest:\n\n\nCode\n# temporal range of interest\n# CHECK: how to get open/close time ranges\ntime_range = \"2018-01-01/2023-01-01\"\n\n# NCEAS bounding box (as a GeoJSON)\n# NCEAS bounding box (as a GeoJSON)\nbbox = {\n    \"type\": \"Polygon\",\n    \"coordinates\":[\n        [\n            [-119.70608227128903, 34.426300194372274],\n            [-119.70608227128903, 34.42041139020533],\n            [-119.6967885126002, 34.42041139020533],\n            [-119.6967885126002, 34.426300194372274],\n            [-119.70608227128903, 34.426300194372274]\n        ]\n    ]\n}\n\n# catalog search\nsearch = catalog.search(\n    collections = ['naip'], # list with collection id\n    intersects = bbox,\n    datetime=time_range\n) \nsearch\n\n\n&lt;pystac_client.item_search.ItemSearch at 0x154ddea90&gt;\n\n\nTo get the items found in the search (or check if there were any matches in the search) we use the item_collection() method:\n\n\nCode\nitems = search.item_collection()\n\n# number of items in search\nlen(items)\n\n\n2\n\n\n\n\nCode\nitems\n\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"FeatureCollection\"\n        \n    \n                \n            \n                \n                    \n        \n            features\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            type\n            \"Feature\"\n        \n    \n            \n        \n            \n                \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n            \n        \n            \n                \n        \n            id\n            \"ca_m_3411935_sw_11_060_20200521\"\n        \n    \n            \n        \n            \n                \n        \n            properties\n            \n        \n            \n                \n        \n            gsd\n            0.6\n        \n    \n            \n        \n            \n                \n        \n            datetime\n            \"2020-05-21T00:00:00Z\"\n        \n    \n            \n        \n            \n                \n        \n            naip:year\n            \"2020\"\n        \n    \n            \n        \n            \n                \n        \n            proj:bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            246930.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            3806808.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            253260.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            3814296.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            26911\n        \n    \n            \n        \n            \n                \n        \n            naip:state\n            \"ca\"\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            12480\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            10550\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            246930.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            3814296.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.683292\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.373269\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.685448\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.440724\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.754272\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.439192\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.752061\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.371741\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.683292\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.373269\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            links\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip/items/ca_m_3411935_sw_11_060_20200521\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=naip&item=ca_m_3411935_sw_11_060_20200521\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            assets\n            \n        \n            \n                \n        \n            image\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.tif?st=2023-12-05T20%3A49%3A26Z&se=2023-12-06T21%3A34%3A26Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-06T20%3A46%3A11Z&ske=2023-12-13T20%3A46%3A11Z&sks=b&skv=2021-06-08&sig=T/1NZtrGuGTpRUDXU20blYXs5pE2wh0fENjFdZESaIo%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"RGBIR COG tile\"\n        \n    \n            \n        \n            \n                \n        \n            eo:bands\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"Red\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"red\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Green\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"green\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Blue\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"blue\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            name\n            \"NIR\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"nir\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"near-infrared\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            thumbnail\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.200.jpg?st=2023-12-05T20%3A49%3A26Z&se=2023-12-06T21%3A34%3A26Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-06T20%3A46%3A11Z&ske=2023-12-13T20%3A46%3A11Z&sks=b&skv=2021-06-08&sig=T/1NZtrGuGTpRUDXU20blYXs5pE2wh0fENjFdZESaIo%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/jpeg\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Thumbnail\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.754272\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.371741\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -119.683292\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.440724\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            stac_extensions\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/eo/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            collection\n            \"naip\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            type\n            \"Feature\"\n        \n    \n            \n        \n            \n                \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n            \n        \n            \n                \n        \n            id\n            \"ca_m_3411935_sw_11_060_20180724_20190209\"\n        \n    \n            \n        \n            \n                \n        \n            properties\n            \n        \n            \n                \n        \n            gsd\n            0.6\n        \n    \n            \n        \n            \n                \n        \n            datetime\n            \"2018-07-24T00:00:00Z\"\n        \n    \n            \n        \n            \n                \n        \n            naip:year\n            \"2018\"\n        \n    \n            \n        \n            \n                \n        \n            proj:bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            246978.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            3806856.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            253212.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            3814248.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            26911\n        \n    \n            \n        \n            \n                \n        \n            naip:state\n            \"ca\"\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            12320\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            10390\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            246978.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            3814248.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.683827\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.37369\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.685956\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.44028\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.753736\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.438772\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.751554\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.372185\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.683827\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.37369\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            links\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip/items/ca_m_3411935_sw_11_060_20180724_20190209\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=naip&item=ca_m_3411935_sw_11_060_20180724_20190209\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            assets\n            \n        \n            \n                \n        \n            image\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2018/ca_060cm_2018/34119/m_3411935_sw_11_060_20180724_20190209.tif?st=2023-12-05T20%3A49%3A26Z&se=2023-12-06T21%3A34%3A26Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-06T20%3A46%3A11Z&ske=2023-12-13T20%3A46%3A11Z&sks=b&skv=2021-06-08&sig=T/1NZtrGuGTpRUDXU20blYXs5pE2wh0fENjFdZESaIo%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"RGBIR COG tile\"\n        \n    \n            \n        \n            \n                \n        \n            eo:bands\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"Red\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"red\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Green\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"green\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Blue\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"blue\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            name\n            \"NIR\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"nir\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"near-infrared\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            metadata\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2018/ca_fgdc_2018/34119/m_3411935_sw_11_060_20180724.txt?st=2023-12-05T20%3A49%3A26Z&se=2023-12-06T21%3A34%3A26Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-06T20%3A46%3A11Z&ske=2023-12-13T20%3A46%3A11Z&sks=b&skv=2021-06-08&sig=T/1NZtrGuGTpRUDXU20blYXs5pE2wh0fENjFdZESaIo%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/plain\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"FGDC Metdata\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"metadata\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            thumbnail\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2018/ca_060cm_2018/34119/m_3411935_sw_11_060_20180724_20190209.200.jpg?st=2023-12-05T20%3A49%3A26Z&se=2023-12-06T21%3A34%3A26Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-06T20%3A46%3A11Z&ske=2023-12-13T20%3A46%3A11Z&sks=b&skv=2021-06-08&sig=T/1NZtrGuGTpRUDXU20blYXs5pE2wh0fENjFdZESaIo%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/jpeg\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Thumbnail\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=naip&item=ca_m_3411935_sw_11_060_20180724_20190209&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=naip&item=ca_m_3411935_sw_11_060_20180724_20190209&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.753736\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.372185\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -119.683827\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.44028\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            stac_extensions\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/eo/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            collection\n            \"naip\""
  },
  {
    "objectID": "posts/python-note-render/STAC-search.html#item",
    "href": "posts/python-note-render/STAC-search.html#item",
    "title": "asb",
    "section": "Item",
    "text": "Item\nLet’s get the first item in the search\n\n\nCode\n# get first item in the catalog search\nitem = items[0]\ntype(item)\n\n\npystac.item.Item\n\n\nRemember the STAC item is the core object in the catalog.\nThe item does not contain the data itslef, but rather metadata about it and links to access the actual data (assets). Some of the metadta:\n\n\nCode\nprint('id', item.id)\nitem.properties\n\n\nid ca_m_3411935_sw_11_060_20200521\n\n\n{'gsd': 0.6,\n 'datetime': '2020-05-21T00:00:00Z',\n 'naip:year': '2020',\n 'proj:bbox': [246930.0, 3806808.0, 253260.0, 3814296.0],\n 'proj:epsg': 26911,\n 'naip:state': 'ca',\n 'proj:shape': [12480, 10550],\n 'proj:transform': [0.6, 0.0, 246930.0, 0.0, -0.6, 3814296.0, 0.0, 0.0, 1.0]}\n\n\nJust as the item properties, the item assets are given in a dictionary, with each vlaue being a pystac.asset. Let’s check the assets in the item:\n\n\nCode\nitem.assets\n\n\n{'image': &lt;Asset href=https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.tif?st=2023-12-05T20%3A49%3A26Z&se=2023-12-06T21%3A34%3A26Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-06T20%3A46%3A11Z&ske=2023-12-13T20%3A46%3A11Z&sks=b&skv=2021-06-08&sig=T/1NZtrGuGTpRUDXU20blYXs5pE2wh0fENjFdZESaIo%3D&gt;,\n 'thumbnail': &lt;Asset href=https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.200.jpg?st=2023-12-05T20%3A49%3A26Z&se=2023-12-06T21%3A34%3A26Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-06T20%3A46%3A11Z&ske=2023-12-13T20%3A46%3A11Z&sks=b&skv=2021-06-08&sig=T/1NZtrGuGTpRUDXU20blYXs5pE2wh0fENjFdZESaIo%3D&gt;,\n 'tilejson': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png&gt;,\n 'rendered_preview': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png&gt;}\n\n\n\n\nCode\nfor key in item.assets.keys():\n    print(key, '--', item.assets[key].title)\n\n\nimage -- RGBIR COG tile\nthumbnail -- Thumbnail\ntilejson -- TileJSON with default rendering\nrendered_preview -- Rendered preview\n\n\nNotice each asset has an href, which is a link to the asset object (i.e. the data). For example, we can use the URL for the rendered preview asset to plot it:\n\n\nCode\nImage(url=item.assets['rendered_preview'].href, width=500)"
  },
  {
    "objectID": "posts/python-note-render/STAC-search.html#load-data",
    "href": "posts/python-note-render/STAC-search.html#load-data",
    "title": "asb",
    "section": "Load data",
    "text": "Load data\nThe raster data in our current item is in the image asset. Again, we access this data via its URL. This time we open it using rioxr.open_rasterio() directly:\n\n\nCode\nsb = rioxr.open_rasterio(item.assets['image'].href)\nsb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray (band: 4, y: 12480, x: 10550)&gt;\n[526656000 values with dtype=uint8]\nCoordinates:\n  * band         (band) int64 1 2 3 4\n  * x            (x) float64 2.469e+05 2.469e+05 ... 2.533e+05 2.533e+05\n  * y            (y) float64 3.814e+06 3.814e+06 ... 3.807e+06 3.807e+06\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:             Area\n    TIFFTAG_IMAGEDESCRIPTION:  OrthoVista\n    TIFFTAG_RESOLUTIONUNIT:    1 (unitless)\n    TIFFTAG_SOFTWARE:          Trimble Germany GmbH\n    TIFFTAG_XRESOLUTION:       1\n    TIFFTAG_YRESOLUTION:       1\n    _FillValue:                0\n    scale_factor:              1.0\n    add_offset:                0.0xarray.DataArrayband: 4y: 12480x: 10550...[526656000 values with dtype=uint8]Coordinates: (4)band(band)int641 2 3 4array([1, 2, 3, 4])x(x)float642.469e+05 2.469e+05 ... 2.533e+05array([246930.3, 246930.9, 246931.5, ..., 253258.5, 253259.1, 253259.7])y(y)float643.814e+06 3.814e+06 ... 3.807e+06array([3814295.7, 3814295.1, 3814294.5, ..., 3806809.5, 3806808.9, 3806808.3])spatial_ref()int640crs_wkt :PROJCS[\"NAD83 / UTM zone 11N\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"26911\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314140356inverse_flattening :298.257222101reference_ellipsoid_name :GRS 1980longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :NAD83horizontal_datum_name :North American Datum 1983projected_crs_name :NAD83 / UTM zone 11Ngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :-117.0false_easting :500000.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"NAD83 / UTM zone 11N\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"26911\"]]GeoTransform :246930.0 0.6 0.0 3814296.0 0.0 -0.6array(0)Indexes: (3)bandPandasIndexPandasIndex(Index([1, 2, 3, 4], dtype='int64', name='band'))xPandasIndexPandasIndex(Index([          246930.3,           246930.9,           246931.5,\n       246932.09999999998, 246932.69999999998,           246933.3,\n                 246933.9,           246934.5, 246935.09999999998,\n       246935.69999999998,\n       ...\n                 253254.3,           253254.9,           253255.5,\n       253256.09999999998, 253256.69999999998,           253257.3,\n                 253257.9,           253258.5, 253259.09999999998,\n       253259.69999999998],\n      dtype='float64', name='x', length=10550))yPandasIndexPandasIndex(Index([         3814295.7,          3814295.1,          3814294.5,\n       3814293.9000000004, 3814293.3000000003,          3814292.7,\n                3814292.1,          3814291.5, 3814290.9000000004,\n       3814290.3000000003,\n       ...\n                3806813.7,          3806813.1,          3806812.5,\n       3806811.9000000004, 3806811.3000000003,          3806810.7,\n                3806810.1,          3806809.5, 3806808.9000000004,\n       3806808.3000000003],\n      dtype='float64', name='y', length=12480))Attributes: (9)AREA_OR_POINT :AreaTIFFTAG_IMAGEDESCRIPTION :OrthoVistaTIFFTAG_RESOLUTIONUNIT :1 (unitless)TIFFTAG_SOFTWARE :Trimble Germany GmbHTIFFTAG_XRESOLUTION :1TIFFTAG_YRESOLUTION :1_FillValue :0scale_factor :1.0add_offset :0.0\n\n\n\n\nCode\n# plot raster with correct ratio\nsize = 6 # height in in of plot\naspect = sb.rio.width/sb.rio.height\nsb.sel(band=[1,2,3]).plot.imshow(size=size)#, aspect=aspect)\n\n\n&lt;matplotlib.image.AxesImage at 0x154795d90&gt;"
  },
  {
    "objectID": "posts/python-note-render/STAC-search.html#exercise",
    "href": "posts/python-note-render/STAC-search.html#exercise",
    "title": "asb",
    "section": "Exercise",
    "text": "Exercise\nThe ‘cop-dem-glo-90’ (id of collection) collection contains the Copernicus DEM at 90m resolution (the one we used for Grand Canyon).\n\nUse the bbox for Santa Barbara to look for items in this collection/\nGet the first item in the search and check its assets.\nPlot the item’s rendered preview asset\nOpen the item’s data using rioxarray.\n\n\n\nCode\n# catalog search\n\nsearch = catalog.search(\ncollections = ['cop-dem-glo-90'],\nintersects = bbox)\n\nsearch\n\n\n&lt;pystac_client.item_search.ItemSearch at 0x154761350&gt;\n\n\n\n\nCode\nsb_items = search.item_collection()\n\n# number of items in search \nlen(sb_items)\n\n\n1\n\n\n\n\nCode\n# first item in catalog\nsb_item = sb_items[0]\ntype(sb_item)\n\n\npystac.item.Item\n\n\n\n\nCode\nsb_item.assets\n\n\n{'data': &lt;Asset href=https://elevationeuwest.blob.core.windows.net/copernicus-dem/COP90_hh/Copernicus_DSM_COG_30_N34_00_W120_00_DEM.tif?st=2023-12-05T20%3A59%3A56Z&se=2023-12-06T21%3A44%3A56Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-06T20%3A09%3A28Z&ske=2023-12-13T20%3A09%3A28Z&sks=b&skv=2021-06-08&sig=%2BbsMafPx2joNCKnCoogWJhqdGtAqnE6tIAbtDmpeEcU%3D&gt;,\n 'tilejson': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=cop-dem-glo-90&item=Copernicus_DSM_COG_30_N34_00_W120_00_DEM&assets=data&colormap_name=terrain&rescale=-1000%2C4000&format=png&gt;,\n 'rendered_preview': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=cop-dem-glo-90&item=Copernicus_DSM_COG_30_N34_00_W120_00_DEM&assets=data&colormap_name=terrain&rescale=-1000%2C4000&format=png&gt;}\n\n\n\n\nCode\nImage(url=sb_item.assets['rendered_preview'].href, width=500)\n\n\n\n\n\n\n\nCode\ndem = rioxr.open_rasterio(sb_item.assets['data'].href)\ndem\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray (band: 1, y: 1200, x: 1200)&gt;\n[1440000 values with dtype=float32]\nCoordinates:\n  * band         (band) int64 1\n  * x            (x) float64 -120.0 -120.0 -120.0 ... -119.0 -119.0 -119.0\n  * y            (y) float64 35.0 35.0 35.0 35.0 35.0 ... 34.0 34.0 34.0 34.0\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:  Point\n    scale_factor:   1.0\n    add_offset:     0.0xarray.DataArrayband: 1y: 1200x: 1200...[1440000 values with dtype=float32]Coordinates: (4)band(band)int641array([1])x(x)float64-120.0 -120.0 ... -119.0 -119.0array([-120.      , -119.999167, -119.998333, ..., -119.0025  , -119.001667,\n       -119.000833])y(y)float6435.0 35.0 35.0 ... 34.0 34.0 34.0array([35.      , 34.999167, 34.998333, ..., 34.0025  , 34.001667, 34.000833])spatial_ref()int640crs_wkt :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984grid_mapping_name :latitude_longitudespatial_ref :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]GeoTransform :-120.00041666666667 0.0008333333333333334 0.0 35.000416666666666 0.0 -0.0008333333333333334array(0)Indexes: (3)bandPandasIndexPandasIndex(Index([1], dtype='int64', name='band'))xPandasIndexPandasIndex(Index([             -120.0, -119.99916666666667, -119.99833333333333,\n                 -119.9975, -119.99666666666667, -119.99583333333334,\n                  -119.995, -119.99416666666667, -119.99333333333334,\n                 -119.9925,\n       ...\n       -119.00833333333334,           -119.0075, -119.00666666666666,\n       -119.00583333333333,            -119.005, -119.00416666666666,\n       -119.00333333333333,           -119.0025, -119.00166666666667,\n       -119.00083333333333],\n      dtype='float64', name='x', length=1200))yPandasIndexPandasIndex(Index([              35.0,  34.99916666666667, 34.998333333333335,\n                  34.9975,  34.99666666666667,  34.99583333333333,\n                   34.995, 34.994166666666665,  34.99333333333333,\n                  34.9925,\n       ...\n        34.00833333333333,            34.0075,  34.00666666666667,\n       34.005833333333335,             34.005,  34.00416666666667,\n        34.00333333333333,            34.0025, 34.001666666666665,\n        34.00083333333333],\n      dtype='float64', name='y', length=1200))Attributes: (3)AREA_OR_POINT :Pointscale_factor :1.0add_offset :0.0"
  },
  {
    "objectID": "posts/2023-12-01-my-blog-post copy/index.html",
    "href": "posts/2023-12-01-my-blog-post copy/index.html",
    "title": "blog post title",
    "section": "",
    "text": "CitationBibTeX citation:@online{kim2023,\n  author = {Kim, Haejin},\n  title = {Blog Post Title},\n  date = {2023-11-08},\n  url = {https://khj9759.github.io/posts/2022-10-24-my-blog-post/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nKim, Haejin. 2023. “Blog Post Title.” November 8, 2023. https://khj9759.github.io/posts/2022-10-24-my-blog-post/."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "posts/2023-11-08-my-blog-post/index.html",
    "href": "posts/2023-11-08-my-blog-post/index.html",
    "title": "Data Accessibility in North Korea",
    "section": "",
    "text": "The yearning for reunification holds great importance for many Koreans, a desire to bridge the gap caused by separation. During the Korean War, my grandparents’ move from North to South Korea resulted in the heartbreaking disconnection from our relatives. Despite the passage of time, political barriers have left us unable to reach to their family in the North, leaving a void of information about their well-being. The difficulty in obtaining any updates from North Korea intensifies our distress, leaving us in the dark about the lives of our loved ones there.\nEnvironmental Challenges Amid Political Complexity While prioritizing environmental issues is a consensus shared by many globally, it might not resonate similarly in Least Developed Countries (LDCs), Small Island Developing States (SIDs), or several African nations. Their existence is deeply entwined with adversity—war, famine, hunger, and poverty—which overshadows environmental concerns. Consequently, obtaining comprehensive data resources from these countries remains an ongoing struggle. North Korea faces a similar plight, grappling with hunger, famine, and a high mortality rate stemming from these issues. Expecting them to prioritize collecting environmental data becomes an impractical demand.\nRecent reports of flooding in North Korea resulted in significant damage to their crops, exacerbating deforestation caused by logging and cultivation. They are critically exposed to hunger and famine. Their ability to engage in sustainable activities has been severely hindered by environmental disasters. They are in dire need of substantial aid from other nations to ensure food security. However, the absence of adequate data makes it challenging to predict the extent of their suffering and devise effective assistance strategies. [1]\n\nTransparent Environmental Data\nThe fields of data science and the environment should be open sources because environmental issues transcend borders and require global protection. Yet, this poses a sensitive matter, with private technologies reluctant to relinquish profits by divulging crucial data. Acknowledging missing data is crucial, exemplified by the “The pentagon, climate change, and war” by Crawford, gleaned from lectures such as the one illustrating the US military’s efforts toward carbon reduction.\nDespite the necessity for most data to be transparent in safeguarding the environment, numerous countries withhold information due to political motives. Countries like China, Russia, and notably North Korea have a significant impact on global environmental dynamics, yet their data remains undisclosed due to political agendas. While working at the Green Climate Fund, I delved into various nations’ National Designated Authority (NDC) reports on reducing greenhouse gas emissions. Although some countries, particularly smaller ones like island nations, demonstrate optimistic goals for emission reduction through renewable energy and electric vehicles, China, Russia, and notably North Korea, present challenges in obtaining crucial environmental data.\n\n\n\n\n\nSatellite data has been instrumental in acquiring insights into North Korea’s forests and land use. However, much of this data remains concealed due to political constraints. During my studies of climate change law at Columbia University, I realized the extent to which environmental science intertwines with legal frameworks, emphasizing the role of political decisions in environmental matters. North Korea faces a similar scenario, heavily reliant on government decisions and propaganda, omitting itself even from the LDCs categories, complicating efforts to assist the country due to a lack of comprehensive data sources.\nStrategies for Addressing North Korea’s Environmental Challenges\nIn light of these challenges, determining North Korea’s environmental priorities to combat climate change and avert future crises becomes imperative. Despite the scarcity of data, information from sources like the offers some insight, albeit limited to specific areas, potentially leading to biased data due to limited resources. Overall, the need for reunification in Korea remains a poignant hope, while addressing environmental concerns in North Korea requires a concerted effort to access vital data and devise strategies that transcend political barriers for a sustainable future.\nHow to overcome this situation? To navigate situations akin to North Korea’s challenges, looking at comparable cases like Myanmar and Eritrea offers valuable insights. Myanmar, once under prolonged political isolation like to North Korea, underwent political reforms that improved transparency, enabling better access to environmental data. This shift allowed for enhanced monitoring and conservation efforts, highlighting the positive impact of political openness. Similarly, Eritrea faced isolation due to political factors, hindering environmental solutions. However, partnerships with international agencies and improved collaboration with neighbors have gradually enabled better environmental monitoring and resource management. These examples emphasize the pivotal role of political reforms, international collaboration, and transparency in overcoming limitations to address environmental challenges in politically isolated nations.\nWhile Myanmar and Eritrea exemplify progress achieved through political reforms and international collaboration to address environmental challenges, North Korea’s situation remains distinct due to its prolonged political isolation. Unlike Myanmar’s recent reforms or Eritrea’s partnerships, North Korea’s closed-off regime presents a more complex scenario. The lack of transparent access to environmental data in North Korea hinders global efforts to comprehensively tackle environmental concerns. [3][4]\nUnique Challenges in North Korea\nHowever, drawing from successful strategies applied elsewhere, such as Myanmar and Eritrea, provides a blueprint for potential avenues in addressing North Korea’s environmental issues. Engaging in diplomatic dialogues and fostering international partnerships could facilitate access to crucial environmental data. International organizations could play a pivotal role in encouraging transparency and advocating for information sharing on environmental matters, thereby aiding North Korea’s efforts to monitor and address environmental challenges. By leveraging lessons learned from comparable cases and employing innovative diplomatic approaches, there is potential to navigate the unique challenges North Korea presents in addressing its environmental issues.\nData Reconciliation Post-Reunification\nFurthermore, the potential reunion of North Korea and South Korea raises several critical considerations regarding environmental issues and data collection. Achieving data reconciliation between the two Koreas post-reunification would present a significant challenge requiring a multifaceted approach. Essential aspects would involve aligning disparate data systems, fostering transparency, and encouraging information exchange. Establishing standardized protocols, investing in capacity development, seeking international collaboration, and managing transitional phases would be pivotal. However, the success of this complex undertaking would heavily rely on political willingness, diplomatic efforts, and a gradual integration process that acknowledges the intricacies of merging distinct data frameworks. Resolving data disparities demands a comprehensive strategy entwining technological progress, collaborative institutions, and diplomatic initiatives to facilitate unified and coherent data practices following reunification.\n\nIn conclusion, the quest for reunification in Korea holds immense significance, coupled with the urgency to address environmental concerns in North Korea. The emotional toll of separation persists, compounded by political barriers that sever ties with relatives in the North. Despite global consensus on environmental priorities, challenges in obtaining comprehensive data persist, hindering effective solutions. The need for transparency in data sharing for global environmental protection is evident, yet political motives impede progress. Strategies derived from comparable cases offer potential avenues for addressing North Korea’s environmental issues. Moreover, the complexity of data reconciliation post-reunification necessitates multifaceted approaches, emphasizing the crucial role of political willingness and international collaboration. To forge a sustainable future and navigate North Korea’s unique challenges, concerted efforts bridging political divides and technological advancements are imperative.\nReference\n[1] North Korea’s Kim blasts ‘irresponsible’ top officials for flood damage: https://www.reuters.com/world/asia-pacific/north-koreas-kim-blasts-irresponsible-top-officials-flood-damage-2023-08-22/\n[2] The pentagon, climate change and war, Crawford pp.103 - 177\n[3] https://hir.harvard.edu/why-has-the-world-forgotten-about-myanmar/\n[4] https://er.usembassy.gov/our-relationship/policy-history/\n\n\n\nCitationBibTeX citation:@online{kim2023,\n  author = {Kim, Haejin},\n  title = {Data {Accessibility} in {North} {Korea}},\n  date = {2023-12-09},\n  url = {https://khj9759.github.io/posts/2022-10-24-my-blog-post/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nKim, Haejin. 2023. “Data Accessibility in North Korea.”\nDecember 9, 2023. https://khj9759.github.io/posts/2022-10-24-my-blog-post/."
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html",
    "href": "posts/python-note-render/thomas_fire_air.html",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "",
    "text": "Author: Haejin Kim\nRepository: https://github.com/khj9759/air_quality"
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html#about",
    "href": "posts/python-note-render/thomas_fire_air.html#about",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "About",
    "text": "About\nThis project aims to generate a false color image illustrating the fire scar left by the 2017 Thomas fire. The task involves utilizing Air Quality Index (AQI) data from the US Environmental Protection Agency to visualize the impact of the Thomas Fire on air quality in Santa Barbara County."
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html#highlights",
    "href": "posts/python-note-render/thomas_fire_air.html#highlights",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Highlights",
    "text": "Highlights\n\nUtilized Pandas for comprehensive data wrangling and exploration.\nEmployed GeoPandas for efficient geospatial data manipulation.\nDeveloped and customized a choropleth map to visualize data spatially.\nCrafted legends using matplotlib.patches to enhance map readability.\nLeveraged rioxarray and xarray for efficient raster data handling and operations."
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html#about-the-data",
    "href": "posts/python-note-render/thomas_fire_air.html#about-the-data",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "About the data",
    "text": "About the data\n\n1) Landsat Collection 2 Level-2 Atmospherically Corrected Surface Reflectance Data:\nThis dataset comprises simplified bands (red, green, blue, near-infrared, and shortwave infrared) derived from the Landsat Collection 2 Level-2 atmospherically corrected surface reflectance data, collected by the Landsat 8 satellite. The data underwent preprocessing in the Microsoft Planetary Computer, involving the removal of non-land data and spatial resolution reduction (Landsat Collection in MPC). It is intended for visualization purposes only.\n\n\n2) California State Fire Perimeters 2017:\nA shapefile detailing fire perimeters in California during 2017. The complete file is accessible via the CA state geoportal.\n\n\n3) Air Quality Data for 2017 and 2018:\nThis dataset was obtained from the EPA data portal. It contains 10 columns with information about statename, countyname, AQI, Defining Parameter, and Date. For the purpose of this analysis, the following columns will be utilized:\n\nstate_name\ncounty_name\nAQI\nDefining_Parameter\nDate"
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html#final-output",
    "href": "posts/python-note-render/thomas_fire_air.html#final-output",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Final Output",
    "text": "Final Output\nThis document aims to produce two main outputs: 1) Create a graph of the Daily AQI and 5-Day Average \n\nMapping the Thomas Fire area in Santa Barbara"
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html#import-libraries",
    "href": "posts/python-note-render/thomas_fire_air.html#import-libraries",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Import libraries",
    "text": "Import libraries\n\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches # for creating legends\n\nimport xarray as xr\nimport rioxarray as rioxr\nimport geopandas as gpd\n\nfrom rasterio.features import rasterize # for rasterizing polygons\n\n\npd.set_option('display.max_columns', None)"
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html#prepare-data",
    "href": "posts/python-note-render/thomas_fire_air.html#prepare-data",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Prepare data",
    "text": "Prepare data\nFirst, we can take a look at ca_fire dataframe:\n\n# make column names small caps\nca_fire.columns = ca_fire.columns.str.lower()\nprint('column name of ca_fire: ',ca_fire.columns, \"\\n\")\n\n# re-assign the column names - .str.lower() makes them lower case\n#  re-assign the column names again - .str.replace(' ','_') replaces the space for _\naqi.columns = aqi.columns.str.lower()\naqi.columns = aqi.columns.str.replace(' ','_')\nprint('column name of aqi: ',aqi.columns, '\\n')\n\ncolumn name of ca_fire:  Index(['index', 'objectid', 'year_', 'state', 'agency', 'unit_id', 'fire_name',\n       'inc_num', 'alarm_date', 'cont_date', 'cause', 'c_method', 'objective',\n       'gis_acres', 'comments', 'complex_na', 'complex_in', 'irwinid',\n       'fire_num', 'decades', 'shape_leng', 'shape_area', 'geometry'],\n      dtype='object') \n\ncolumn name of aqi:  Index(['state_name', 'county_name', 'state_code', 'county_code', 'date', 'aqi',\n       'category', 'defining_parameter', 'defining_site',\n       'number_of_sites_reporting'],\n      dtype='object')"
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html#data-clean",
    "href": "posts/python-note-render/thomas_fire_air.html#data-clean",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Data Clean",
    "text": "Data Clean\nFor the AQI data, narrow down the scope to focus on California and Santa Barbara. Remove unnecessary columns such as state_name, county_name, state_code, and county_code.\n\n# new data frame 'aqi_sb' select only data California and Santa Barbara. \naqi_sb = aqi[(aqi.state_name == 'California') & (aqi.county_name == 'Santa Barbara')].copy()\n\n# remove `state_name`, `county_name`, `state_code` and `county_code` columns\naqi_sb = aqi_sb.drop(columns = ['state_name','county_name','state_code','county_code'])\n\n\n# covert precip.DATE column to timedate objects\naqi_sb.date = pd.to_datetime(aqi_sb.date)\naqi_sb = aqi_sb.set_index('date')\n\nIndexing the DataFrame with a DateTime index.\n\n# Check the updated index of aqi_sb and its data type\nindex_dtype = aqi_sb.index\nprint(index_dtype)\n\nDatetimeIndex(['2017-01-01', '2017-01-02', '2017-01-03', '2017-01-04',\n               '2017-01-05', '2017-01-06', '2017-01-07', '2017-01-08',\n               '2017-01-09', '2017-01-10',\n               ...\n               '2018-12-22', '2018-12-23', '2018-12-24', '2018-12-25',\n               '2018-12-26', '2018-12-27', '2018-12-28', '2018-12-29',\n               '2018-12-30', '2018-12-31'],\n              dtype='datetime64[ns]', name='date', length=730, freq=None)"
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html#rolling-window-calculations",
    "href": "posts/python-note-render/thomas_fire_air.html#rolling-window-calculations",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Rolling Window Calculations",
    "text": "Rolling Window Calculations\nUtilize the rolling() method available for pandas.Series to perform rolling window calculations. Setting the parameter to ‘5D’ specifies a window of 5 days, while the aggregator function mean() computes the mean over each window.\n\n# we get a pd.Series as ouput\naqi_sb.aqi.rolling('5D').mean()\n\n# Calculate the 5-day rolling mean of AQI and add it as a new column\naqi_sb['five_day_average']=aqi_sb.aqi.rolling('5D').mean()\n\n# Display the DataFrame with the new 'five_day_average' column\nprint(aqi_sb)\n\n            aqi  category defining_parameter defining_site  \\\ndate                                                         \n2017-01-01   39      Good              Ozone   06-083-4003   \n2017-01-02   36      Good              Ozone   06-083-4003   \n2017-01-03   71  Moderate               PM10   06-083-4003   \n2017-01-04   34      Good              Ozone   06-083-4003   \n2017-01-05   37      Good              Ozone   06-083-4003   \n...         ...       ...                ...           ...   \n2018-12-27   37      Good              Ozone   06-083-1025   \n2018-12-28   39      Good              Ozone   06-083-1021   \n2018-12-29   39      Good              Ozone   06-083-1021   \n2018-12-30   39      Good              Ozone   06-083-1021   \n2018-12-31   38      Good              Ozone   06-083-1021   \n\n            number_of_sites_reporting  five_day_average  \ndate                                                     \n2017-01-01                         12         39.000000  \n2017-01-02                         11         37.500000  \n2017-01-03                         12         48.666667  \n2017-01-04                         13         45.000000  \n2017-01-05                         12         43.400000  \n...                               ...               ...  \n2018-12-27                         11         38.600000  \n2018-12-28                         12         38.600000  \n2018-12-29                         12         38.200000  \n2018-12-30                         12         37.800000  \n2018-12-31                         12         38.400000  \n\n[730 rows x 6 columns]"
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html#update",
    "href": "posts/python-note-render/thomas_fire_air.html#update",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Update",
    "text": "Update\nUtilize the squeeze() function followed by drop() to remove the specified band.\n\n# original dimensions and coordinates\nprint(landsat.dims, landsat.coords,'\\n')\n\n# remove length 1 dimension (band)\nlandsat = landsat.squeeze()\nprint(landsat.dims, landsat.coords,'\\n')\n\n# remove coordinates associated to band\nlandsat = landsat.drop('band')\nprint(landsat.dims, landsat.coords)\n\nFrozen({'band': 1, 'x': 870, 'y': 731}) Coordinates:\n  * band         (band) int64 1\n  * x            (x) float64 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n  * y            (y) float64 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n    spatial_ref  int64 0 \n\nFrozen({'x': 870, 'y': 731}) Coordinates:\n    band         int64 1\n  * x            (x) float64 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n  * y            (y) float64 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n    spatial_ref  int64 0 \n\nFrozen({'x': 870, 'y': 731}) Coordinates:\n  * x            (x) float64 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n  * y            (y) float64 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n    spatial_ref  int64 0"
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html#matching-coordinate-reference-systems-crs",
    "href": "posts/python-note-render/thomas_fire_air.html#matching-coordinate-reference-systems-crs",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Matching Coordinate Reference Systems (CRS)",
    "text": "Matching Coordinate Reference Systems (CRS)\nIn order to generate the map, compare the CRS (Coordinate Reference Systems) of ca_fire and landsat, and ensure they have the same CRS by matching them.\n\n# check CRS\nprint(f\"california_fire: {ca_fire.crs} \\nland sat: {landsat.rio.crs}\\n\")\n\n# transform fishing_areas CRS to epsg:32611\nca_fire = ca_fire.to_crs(landsat.rio.crs)\n\nprint('match crs landsat and ca_fire?:', landsat.rio.crs == ca_fire.crs)\n\ncalifornia_fire: EPSG:3857 \nland sat: EPSG:32611\n\nmatch crs landsat and ca_fire?: True"
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html#dissolve-and-clipping",
    "href": "posts/python-note-render/thomas_fire_air.html#dissolve-and-clipping",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Dissolve and Clipping",
    "text": "Dissolve and Clipping\nAggregate the geometries based on the values of a column such as geometry and fire_name, assigning the resulting structure the name fire_districts.\nClip the landsat data to include only the areas within the boundaries of the fire_districts.\n\n# dissolve by district\nfire_districts = ca_fire[['geometry','fire_name']].dissolve(by='fire_name', as_index=False)\nfire_districts\n\n# clipping the ca perimeter only fire \nfire_districts_clip = landsat.rio.clip_box(*fire_districts.total_bounds)"
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html#clipping-to-the-area-of-thomas-fire-exclusively",
    "href": "posts/python-note-render/thomas_fire_air.html#clipping-to-the-area-of-thomas-fire-exclusively",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Clipping to the Area of Thomas Fire Exclusively",
    "text": "Clipping to the Area of Thomas Fire Exclusively\nClip the dataset to encompass solely the geographical extent affected by the Thomas Fire.\n\n# Registered areas:\n# print(ca_fire.fire_name.unique())\n\n# Filter the 'fire_districts' dataset to obtain the area specifically related to the Thomas Fire\nfire_thomas = fire_districts[fire_districts.fire_name == 'THOMAS']"
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html#plotting-daily-aqi-and-5-day-average",
    "href": "posts/python-note-render/thomas_fire_air.html#plotting-daily-aqi-and-5-day-average",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Plotting Daily AQI and 5-Day Average",
    "text": "Plotting Daily AQI and 5-Day Average\nGenerate a line plot illustrating both the daily Air Quality Index (AQI) and the 5-day average. Overlay the 5-day average on the daily AQI data. Notably, December 2017 recorded substantially high AQI levels in Santa Barbara, CA. This observed surge in AQI is directly linked to the impact of the Thomas fire.\n\n# initialize empty figure\nfig, ax = plt.subplots()\n\n# ---------------------------\n# Create a line plot for daily AQI on the existing ax\naqi_sb.plot(y='aqi', ax=ax, label='Daily AQI', color='grey')\n\n# Create a line plot for the 5-day average on the same ax\naqi_sb.plot(y='five_day_average', ax=ax, label='5-Day Average', color='brown')\n\n\n# ----------------------------\n# Set plot title and labels\nax.set_title('5-Day Average on Top of Daily AQI for Santa Barbara, California')\nax.set_xlabel('Date')\nax.set_ylabel('AQI Value')\n\n# display figure\nplt.show()\n#plt.savefig('image/AQI_SB.png', bbox_inches='tight',  dpi=100)"
  },
  {
    "objectID": "posts/python-note-render/thomas_fire_air.html#map",
    "href": "posts/python-note-render/thomas_fire_air.html#map",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Map",
    "text": "Map\nDisplays the false color image composed of shortwave infrared (SWIR), near-infrared (NIR), and red bands. Additionally, overlay the perimeter of the Thomas fire on this map.\n\n\nfig, ax = plt.subplots()\n\n# ---------------------------------\n# bring the clipping map\nfire_districts_clip[['swir22','nir08','red']].to_array().plot.imshow(robust = True)\n\n\n# bring the fire thomas map\nfire_thomas.plot(ax=ax, edgecolor='red', color='none')\n\n# ---------------------------------\n# create the patch\nfire_thomas_patch = mpatches.Patch(edgecolor='red', facecolor='none', linewidth=3,\n                              label='Thomas fire')\n \n# ---------------------------------\n# Adding legend with custom label colors and settings\nlegend = ax.legend(handles=[fire_thomas_patch], frameon=False,loc='upper left', bbox_to_anchor= (1, 1))\nax.set_title('Thomas Fire area in the map')\n\nplt.show()  \n#plt.savefig('image/Thomas_fire_map.png', bbox_inches='tight',  dpi=100)"
  },
  {
    "objectID": "posts/2023-12-08-ethics/index.html",
    "href": "posts/2023-12-08-ethics/index.html",
    "title": "Data Accessibility in North Korea",
    "section": "",
    "text": "The yearning for reunification holds great importance for many Koreans, a desire to bridge the gap caused by separation. During the Korean War, my grandparents’ move from North to South Korea resulted in the heartbreaking disconnection from our relatives. Despite the passage of time, political barriers have left us unable to reach to their family in the North, leaving a void of information about their well-being. The difficulty in obtaining any updates from North Korea intensifies our distress, leaving us in the dark about the lives of our loved ones there.\nEnvironmental Challenges Amid Political Complexity While prioritizing environmental issues is a consensus shared by many globally, it might not resonate similarly in Least Developed Countries (LDCs), Small Island Developing States (SIDs), or several African nations. Their existence is deeply entwined with adversity—war, famine, hunger, and poverty—which overshadows environmental concerns. Consequently, obtaining comprehensive data resources from these countries remains an ongoing struggle. North Korea faces a similar plight, grappling with hunger, famine, and a high mortality rate stemming from these issues. Expecting them to prioritize collecting environmental data becomes an impractical demand.\nRecent reports of flooding in North Korea resulted in significant damage to their crops, exacerbating deforestation caused by logging and cultivation. They are critically exposed to hunger and famine. Their ability to engage in sustainable activities has been severely hindered by environmental disasters. They are in dire need of substantial aid from other nations to ensure food security. However, the absence of adequate data makes it challenging to predict the extent of their suffering and devise effective assistance strategies. [1]\n\nTransparent Environmental Data\nThe fields of data science and the environment should be open sources because environmental issues transcend borders and require global protection. Yet, this poses a sensitive matter, with private technologies reluctant to relinquish profits by divulging crucial data. Acknowledging missing data is crucial, exemplified by the “The pentagon, climate change, and war” by Crawford, gleaned from lectures such as the one illustrating the US military’s efforts toward carbon reduction.\nDespite the necessity for most data to be transparent in safeguarding the environment, numerous countries withhold information due to political motives. Countries like China, Russia, and notably North Korea have a significant impact on global environmental dynamics, yet their data remains undisclosed due to political agendas. While working at the Green Climate Fund, I delved into various nations’ National Designated Authority (NDC) reports on reducing greenhouse gas emissions. Although some countries, particularly smaller ones like island nations, demonstrate optimistic goals for emission reduction through renewable energy and electric vehicles, China, Russia, and notably North Korea, present challenges in obtaining crucial environmental data.\n\n\n\n\n\nSatellite data has been instrumental in acquiring insights into North Korea’s forests and land use. However, much of this data remains concealed due to political constraints. During my studies of climate change law at Columbia University, I realized the extent to which environmental science intertwines with legal frameworks, emphasizing the role of political decisions in environmental matters. North Korea faces a similar scenario, heavily reliant on government decisions and propaganda, omitting itself even from the LDCs categories, complicating efforts to assist the country due to a lack of comprehensive data sources.\nStrategies for Addressing North Korea’s Environmental Challenges\nIn light of these challenges, determining North Korea’s environmental priorities to combat climate change and avert future crises becomes imperative. Despite the scarcity of data, information from sources like the offers some insight, albeit limited to specific areas, potentially leading to biased data due to limited resources. Overall, the need for reunification in Korea remains a poignant hope, while addressing environmental concerns in North Korea requires a concerted effort to access vital data and devise strategies that transcend political barriers for a sustainable future.\nHow to overcome this situation? To navigate situations akin to North Korea’s challenges, looking at comparable cases like Myanmar and Eritrea offers valuable insights. Myanmar, once under prolonged political isolation like to North Korea, underwent political reforms that improved transparency, enabling better access to environmental data. This shift allowed for enhanced monitoring and conservation efforts, highlighting the positive impact of political openness. Similarly, Eritrea faced isolation due to political factors, hindering environmental solutions. However, partnerships with international agencies and improved collaboration with neighbors have gradually enabled better environmental monitoring and resource management. These examples emphasize the pivotal role of political reforms, international collaboration, and transparency in overcoming limitations to address environmental challenges in politically isolated nations.\nWhile Myanmar and Eritrea exemplify progress achieved through political reforms and international collaboration to address environmental challenges, North Korea’s situation remains distinct due to its prolonged political isolation. Unlike Myanmar’s recent reforms or Eritrea’s partnerships, North Korea’s closed-off regime presents a more complex scenario. The lack of transparent access to environmental data in North Korea hinders global efforts to comprehensively tackle environmental concerns. [3][4]\nUnique Challenges in North Korea\nHowever, drawing from successful strategies applied elsewhere, such as Myanmar and Eritrea, provides a blueprint for potential avenues in addressing North Korea’s environmental issues. Engaging in diplomatic dialogues and fostering international partnerships could facilitate access to crucial environmental data. International organizations could play a pivotal role in encouraging transparency and advocating for information sharing on environmental matters, thereby aiding North Korea’s efforts to monitor and address environmental challenges. By leveraging lessons learned from comparable cases and employing innovative diplomatic approaches, there is potential to navigate the unique challenges North Korea presents in addressing its environmental issues.\nData Reconciliation Post-Reunification\nFurthermore, the potential reunion of North Korea and South Korea raises several critical considerations regarding environmental issues and data collection. Achieving data reconciliation between the two Koreas post-reunification would present a significant challenge requiring a multifaceted approach. Essential aspects would involve aligning disparate data systems, fostering transparency, and encouraging information exchange. Establishing standardized protocols, investing in capacity development, seeking international collaboration, and managing transitional phases would be pivotal. However, the success of this complex undertaking would heavily rely on political willingness, diplomatic efforts, and a gradual integration process that acknowledges the intricacies of merging distinct data frameworks. Resolving data disparities demands a comprehensive strategy entwining technological progress, collaborative institutions, and diplomatic initiatives to facilitate unified and coherent data practices following reunification.\n\nIn conclusion, the quest for reunification in Korea holds immense significance, coupled with the urgency to address environmental concerns in North Korea. The emotional toll of separation persists, compounded by political barriers that sever ties with relatives in the North. Despite global consensus on environmental priorities, challenges in obtaining comprehensive data persist, hindering effective solutions. The need for transparency in data sharing for global environmental protection is evident, yet political motives impede progress. Strategies derived from comparable cases offer potential avenues for addressing North Korea’s environmental issues. Moreover, the complexity of data reconciliation post-reunification necessitates multifaceted approaches, emphasizing the crucial role of political willingness and international collaboration. To forge a sustainable future and navigate North Korea’s unique challenges, concerted efforts bridging political divides and technological advancements are imperative.\nReference\n[1] North Korea’s Kim blasts ‘irresponsible’ top officials for flood damage: https://www.reuters.com/world/asia-pacific/north-koreas-kim-blasts-irresponsible-top-officials-flood-damage-2023-08-22/\n[2] The pentagon, climate change and war, Crawford pp.103 - 177\n[3] https://hir.harvard.edu/why-has-the-world-forgotten-about-myanmar/\n[4] https://er.usembassy.gov/our-relationship/policy-history/\n\n\n\nCitationBibTeX citation:@online{kim2023,\n  author = {Kim, Haejin},\n  title = {Data {Accessibility} in {North} {Korea}},\n  date = {2023-12-09},\n  url = {https://khj9759.github.io/posts/2023-12-08-ethics/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nKim, Haejin. 2023. “Data Accessibility in North Korea.”\nDecember 9, 2023. https://khj9759.github.io/posts/2023-12-08-ethics/."
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "",
    "text": "Author: Haejin Kim\nRepository: https://github.com/khj9759/air_quality\n\n\nThis project aims to generate a comprehensive analysis by creating a false color image that vividly portrays the fire scar resulting from the 2017 Thomas Fire. To achieve this, the project utilizes Air Quality Index (AQI) data sourced from the US Environmental Protection Agency. The primary objective is to visually depict the substantial impact of the Thomas Fire on air quality conditions specifically within Santa Barbara County.\n\n\n\n\nEmployed Pandas for data manipulation and time-series analysis\nGeoPandas for geospatial tasks including patches and clipping\nCreated clear map legends using Matplotlib’s mpatches\nRioxarray for efficient raster data handling\n\n\n\n\n\n\nThis dataset comprises simplified bands (red, green, blue, near-infrared, and shortwave infrared) derived from the Landsat Collection 2 Level-2 atmospherically corrected surface reflectance data, collected by the Landsat 8 satellite. The data underwent preprocessing in the Microsoft Planetary Computer, involving the removal of non-land data and spatial resolution reduction (Landsat Collection in MPC). It is intended for visualization purposes only.\n\n\n\nA shapefile detailing fire perimeters in California during 2017. The complete file is accessible via the CA state geoportal.\n\nfire_name: Name of Fire\ngeometry\n\nData resource: https://gis.data.ca.gov/datasets/CALFIRE-Forestry::california-fire-perimeters-all-1/about\n\n\n\nThis dataset was obtained from the EPA data portal. It contains 10 columns with information about statename, countyname, AQI, Defining Parameter, and Date. For the purpose of this analysis, the following columns will be utilized:\n\nAQI: Air Quality Index\nDate: time to measure\nCounty Name\nNumber of Report: Report to Fire\nDefining Parameter: Method to measure air quality\n\nData resource: https://www.epa.gov/\n\n\n\n\nThis document aims to produce two main outputs:\n\nCreate a graph of the Daily AQI and 5-Day Average\n\n\n\nMapping the Thomas Fire area in Santa Barbara\n\n\n\n\n\n\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches # for creating legends\n\nimport rioxarray as rioxr\nimport geopandas as gpd\n\nfrom rasterio.features import rasterize # for rasterizing polygons\n\n\npd.set_option('display.max_columns', None)"
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#about",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#about",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "",
    "text": "This project aims to generate a comprehensive analysis by creating a false color image that vividly portrays the fire scar resulting from the 2017 Thomas Fire. To achieve this, the project utilizes Air Quality Index (AQI) data sourced from the US Environmental Protection Agency. The primary objective is to visually depict the substantial impact of the Thomas Fire on air quality conditions specifically within Santa Barbara County."
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#highlights",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#highlights",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "",
    "text": "Employed Pandas for data manipulation and time-series analysis\nGeoPandas for geospatial tasks including patches and clipping\nCreated clear map legends using Matplotlib’s mpatches\nRioxarray for efficient raster data handling"
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#about-the-data",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#about-the-data",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "",
    "text": "This dataset comprises simplified bands (red, green, blue, near-infrared, and shortwave infrared) derived from the Landsat Collection 2 Level-2 atmospherically corrected surface reflectance data, collected by the Landsat 8 satellite. The data underwent preprocessing in the Microsoft Planetary Computer, involving the removal of non-land data and spatial resolution reduction (Landsat Collection in MPC). It is intended for visualization purposes only.\n\n\n\nA shapefile detailing fire perimeters in California during 2017. The complete file is accessible via the CA state geoportal.\n\nfire_name: Name of Fire\ngeometry\n\nData resource: https://gis.data.ca.gov/datasets/CALFIRE-Forestry::california-fire-perimeters-all-1/about\n\n\n\nThis dataset was obtained from the EPA data portal. It contains 10 columns with information about statename, countyname, AQI, Defining Parameter, and Date. For the purpose of this analysis, the following columns will be utilized:\n\nAQI: Air Quality Index\nDate: time to measure\nCounty Name\nNumber of Report: Report to Fire\nDefining Parameter: Method to measure air quality\n\nData resource: https://www.epa.gov/"
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#final-output",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#final-output",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "",
    "text": "This document aims to produce two main outputs:\n\nCreate a graph of the Daily AQI and 5-Day Average\n\n\n\nMapping the Thomas Fire area in Santa Barbara"
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#import-libraries",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#import-libraries",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "",
    "text": "import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches # for creating legends\n\nimport rioxarray as rioxr\nimport geopandas as gpd\n\nfrom rasterio.features import rasterize # for rasterizing polygons\n\n\npd.set_option('display.max_columns', None)"
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#prepare-data",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#prepare-data",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Prepare data",
    "text": "Prepare data\nFirst, we can take a look at ca_fire dataframe:\n\n# make column names small caps\nca_fire.columns = ca_fire.columns.str.lower()\nprint('column name of ca_fire: ',ca_fire.columns, \"\\n\")\n\n# re-assign the column names - .str.lower() makes them lower case\n#  re-assign the column names again - .str.replace(' ','_') replaces the space for _\naqi.columns = aqi.columns.str.lower()\naqi.columns = aqi.columns.str.replace(' ','_')\nprint('column name of aqi: ',aqi.columns, '\\n')\n\ncolumn name of ca_fire:  Index(['index', 'objectid', 'year_', 'state', 'agency', 'unit_id', 'fire_name',\n       'inc_num', 'alarm_date', 'cont_date', 'cause', 'c_method', 'objective',\n       'gis_acres', 'comments', 'complex_na', 'complex_in', 'irwinid',\n       'fire_num', 'decades', 'shape_leng', 'shape_area', 'geometry'],\n      dtype='object') \n\ncolumn name of aqi:  Index(['state_name', 'county_name', 'state_code', 'county_code', 'date', 'aqi',\n       'category', 'defining_parameter', 'defining_site',\n       'number_of_sites_reporting'],\n      dtype='object')"
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#data-clean",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#data-clean",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Data Clean",
    "text": "Data Clean\nFor the AQI data, narrow down the scope to focus on California and Santa Barbara. Remove unnecessary columns such as state_name, county_name, state_code, and county_code.\n\n# new data frame 'aqi_sb' select only data California and Santa Barbara. \naqi_sb = aqi[(aqi.state_name == 'California') & (aqi.county_name == 'Santa Barbara')].copy()\n\n# remove `state_name`, `county_name`, `state_code` and `county_code` columns\naqi_sb = aqi_sb.drop(columns = ['state_name','county_name','state_code','county_code'])\n\n\n# covert precip.DATE column to timedate objects\naqi_sb.date = pd.to_datetime(aqi_sb.date)\naqi_sb = aqi_sb.set_index('date')\n\nIndexing the DataFrame with a DateTime index.\n\n# Check the updated index of aqi_sb and its data type\nindex_dtype = aqi_sb.index\nprint(index_dtype)\n\nDatetimeIndex(['2017-01-01', '2017-01-02', '2017-01-03', '2017-01-04',\n               '2017-01-05', '2017-01-06', '2017-01-07', '2017-01-08',\n               '2017-01-09', '2017-01-10',\n               ...\n               '2018-12-22', '2018-12-23', '2018-12-24', '2018-12-25',\n               '2018-12-26', '2018-12-27', '2018-12-28', '2018-12-29',\n               '2018-12-30', '2018-12-31'],\n              dtype='datetime64[ns]', name='date', length=730, freq=None)"
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#rolling-window-calculations",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#rolling-window-calculations",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Rolling Window Calculations",
    "text": "Rolling Window Calculations\nUtilize the rolling() method available for pandas.Series to perform rolling window calculations. Setting the parameter to ‘5D’ specifies a window of 5 days, while the aggregator function mean() computes the mean over each window.\n\n# we get a pd.Series as ouput\naqi_sb.aqi.rolling('5D').mean()\n\n# Calculate the 5-day rolling mean of AQI and add it as a new column\naqi_sb['five_day_average']=aqi_sb.aqi.rolling('5D').mean()\n\n# Display the DataFrame with the new 'five_day_average' column\nprint(aqi_sb)\n\n            aqi  category defining_parameter defining_site  \\\ndate                                                         \n2017-01-01   39      Good              Ozone   06-083-4003   \n2017-01-02   36      Good              Ozone   06-083-4003   \n2017-01-03   71  Moderate               PM10   06-083-4003   \n2017-01-04   34      Good              Ozone   06-083-4003   \n2017-01-05   37      Good              Ozone   06-083-4003   \n...         ...       ...                ...           ...   \n2018-12-27   37      Good              Ozone   06-083-1025   \n2018-12-28   39      Good              Ozone   06-083-1021   \n2018-12-29   39      Good              Ozone   06-083-1021   \n2018-12-30   39      Good              Ozone   06-083-1021   \n2018-12-31   38      Good              Ozone   06-083-1021   \n\n            number_of_sites_reporting  five_day_average  \ndate                                                     \n2017-01-01                         12         39.000000  \n2017-01-02                         11         37.500000  \n2017-01-03                         12         48.666667  \n2017-01-04                         13         45.000000  \n2017-01-05                         12         43.400000  \n...                               ...               ...  \n2018-12-27                         11         38.600000  \n2018-12-28                         12         38.600000  \n2018-12-29                         12         38.200000  \n2018-12-30                         12         37.800000  \n2018-12-31                         12         38.400000  \n\n[730 rows x 6 columns]"
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#update",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#update",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Update",
    "text": "Update\nUtilize the squeeze() function followed by drop() to remove the specified band.\n\n# original dimensions and coordinates\nprint(landsat.dims, landsat.coords,'\\n')\n\n# remove length 1 dimension (band)\nlandsat = landsat.squeeze()\nprint(landsat.dims, landsat.coords,'\\n')\n\n# remove coordinates associated to band\nlandsat = landsat.drop('band')\nprint(landsat.dims, landsat.coords)\n\nFrozen({'band': 1, 'x': 870, 'y': 731}) Coordinates:\n  * band         (band) int64 1\n  * x            (x) float64 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n  * y            (y) float64 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n    spatial_ref  int64 0 \n\nFrozen({'x': 870, 'y': 731}) Coordinates:\n    band         int64 1\n  * x            (x) float64 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n  * y            (y) float64 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n    spatial_ref  int64 0 \n\nFrozen({'x': 870, 'y': 731}) Coordinates:\n  * x            (x) float64 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n  * y            (y) float64 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n    spatial_ref  int64 0"
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#matching-coordinate-reference-systems-crs",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#matching-coordinate-reference-systems-crs",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Matching Coordinate Reference Systems (CRS)",
    "text": "Matching Coordinate Reference Systems (CRS)\nIn order to generate the map, compare the CRS (Coordinate Reference Systems) of ca_fire and landsat, and ensure they have the same CRS by matching them.\n\n# check CRS\nprint(f\"california_fire: {ca_fire.crs} \\nland sat: {landsat.rio.crs}\\n\")\n\n# transform fishing_areas CRS to epsg:32611\nca_fire = ca_fire.to_crs(landsat.rio.crs)\n\nprint('match crs landsat and ca_fire?:', landsat.rio.crs == ca_fire.crs)\n\ncalifornia_fire: EPSG:3857 \nland sat: EPSG:32611\n\nmatch crs landsat and ca_fire?: True"
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#dissolve-and-clipping",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#dissolve-and-clipping",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Dissolve and Clipping",
    "text": "Dissolve and Clipping\nAggregate the geometries based on the values of a column such as geometry and fire_name, assigning the resulting structure the name fire_districts.\nClip the landsat data to include only the areas within the boundaries of the fire_districts.\n\n# dissolve by district\nfire_districts = ca_fire[['geometry','fire_name']].dissolve(by='fire_name', as_index=False)\nfire_districts\n\n# clipping the ca perimeter only fire \nfire_districts_clip = landsat.rio.clip_box(*fire_districts.total_bounds)"
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#clipping-to-the-area-of-thomas-fire-exclusively",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#clipping-to-the-area-of-thomas-fire-exclusively",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Clipping to the Area of Thomas Fire Exclusively",
    "text": "Clipping to the Area of Thomas Fire Exclusively\nClip the dataset to encompass solely the geographical extent affected by the Thomas Fire.\n\n# Registered areas:\n# print(ca_fire.fire_name.unique())\n\n# Filter the 'fire_districts' dataset to obtain the area specifically related to the Thomas Fire\nfire_thomas = fire_districts[fire_districts.fire_name == 'THOMAS']"
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#plotting-daily-aqi-and-5-day-average",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#plotting-daily-aqi-and-5-day-average",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Plotting Daily AQI and 5-Day Average",
    "text": "Plotting Daily AQI and 5-Day Average\nGenerate a line plot illustrating both the daily Air Quality Index (AQI) and the 5-day average. Overlay the 5-day average on the daily AQI data. Notably, December 2017 recorded substantially high AQI levels in Santa Barbara, CA. This observed surge in AQI is directly linked to the impact of the Thomas fire.\n\n# initialize empty figure\nfig, ax = plt.subplots()\n\n# ---------------------------\n# Create a line plot for daily AQI on the existing ax\naqi_sb.plot(y='aqi', ax=ax, label='Daily AQI', color='grey')\n\n# Create a line plot for the 5-day average on the same ax\naqi_sb.plot(y='five_day_average', ax=ax, label='5-Day Average', color='brown')\n\n\n# ----------------------------\n# Set plot title and labels\nax.set_title('5-Day Average on Top of Daily AQI for Santa Barbara, California')\nax.set_xlabel('Date')\nax.set_ylabel('AQI Value')\n\n# display figure\nplt.show()\n#plt.savefig('image/AQI_SB.png', bbox_inches='tight',  dpi=100)"
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#map",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#map",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Map",
    "text": "Map\nDisplays the false color image composed of shortwave infrared (SWIR), near-infrared (NIR), and red bands. Additionally, overlay the perimeter of the Thomas fire on this map.\n\n\nfig, ax = plt.subplots()\n\n# ---------------------------------\n# bring the clipping map\nfire_districts_clip[['swir22','nir08','red']].to_array().plot.imshow(robust = True)\n\n\n# bring the fire thomas map\nfire_thomas.plot(ax=ax, edgecolor='red', color='none')\n\n# ---------------------------------\n# create the patch\nfire_thomas_patch = mpatches.Patch(edgecolor='red', facecolor='none', linewidth=3,\n                              label='Thomas fire')\n \n# ---------------------------------\n# Adding legend with custom label colors and settings\nlegend = ax.legend(handles=[fire_thomas_patch], frameon=False,loc='upper left', bbox_to_anchor= (1, 1))\nax.set_title('Thomas Fire area in the map')\n\nplt.show()  \n#plt.savefig('image/Thomas_fire_map.png', bbox_inches='tight',  dpi=100)"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/index.html",
    "href": "posts/2023-12-9-transport-emission/index.html",
    "title": "Vehicles emission affects to the climate change",
    "section": "",
    "text": "Repository: https://github.com/khj9759/transport_emission"
  },
  {
    "objectID": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#data-cleaning",
    "href": "posts/2023-12-09-thomas-fire/thomas_fire_air.html#data-cleaning",
    "title": "Air Quality Analysis of Thomas Fire",
    "section": "Data Cleaning",
    "text": "Data Cleaning\nConvert the column names to lowercase and replace ’ ’ with ’_’ for both ca_fire and aqi.\n\n# make column names small caps\nca_fire.columns = ca_fire.columns.str.lower()\nprint('column name of ca_fire: ',ca_fire.columns, \"\\n\")\n\n# re-assign the column names - .str.lower() makes them lower case\n#  re-assign the column names again - .str.replace(' ','_') replaces the space for _\naqi.columns = aqi.columns.str.lower()\naqi.columns = aqi.columns.str.replace(' ','_')\nprint('column name of aqi: ',aqi.columns, '\\n')\n\ncolumn name of ca_fire:  Index(['index', 'objectid', 'year_', 'state', 'agency', 'unit_id', 'fire_name',\n       'inc_num', 'alarm_date', 'cont_date', 'cause', 'c_method', 'objective',\n       'gis_acres', 'comments', 'complex_na', 'complex_in', 'irwinid',\n       'fire_num', 'decades', 'shape_leng', 'shape_area', 'geometry'],\n      dtype='object') \n\ncolumn name of aqi:  Index(['state_name', 'county_name', 'state_code', 'county_code', 'date', 'aqi',\n       'category', 'defining_parameter', 'defining_site',\n       'number_of_sites_reporting'],\n      dtype='object') \n\n\n\nFor the AQI data, narrow down the scope to focus on California and Santa Barbara. Remove unnecessary columns such as state_name, county_name, state_code, and county_code.\n\n# new data frame 'aqi_sb' select only data California and Santa Barbara. \naqi_sb = aqi[(aqi.state_name == 'California') & (aqi.county_name == 'Santa Barbara')].copy()\n\n# remove `state_name`, `county_name`, `state_code` and `county_code` columns\naqi_sb = aqi_sb.drop(columns = ['state_name','county_name','state_code','county_code'])\n\naqi_sb.dtypes\n\ndate                         object\naqi                           int64\ncategory                     object\ndefining_parameter           object\ndefining_site                object\nnumber_of_sites_reporting     int64\ndtype: object\n\n\nAs observed, the ‘aqi_sb’ column appears to contain objects. To convert these objects into datetime values, you can utilize the ‘precip.DATE’ column and then apply the ‘set_index’ function.\n\n# covert precip.DATE column to timedate objects\naqi_sb.date = pd.to_datetime(aqi_sb.date)\naqi_sb = aqi_sb.set_index('date')\n\nIndexing the DataFrame with a DateTime index.\n\n# Check the updated index of aqi_sb and its data type\nindex_dtype = aqi_sb.index\nprint(index_dtype)\n\nDatetimeIndex(['2017-01-01', '2017-01-02', '2017-01-03', '2017-01-04',\n               '2017-01-05', '2017-01-06', '2017-01-07', '2017-01-08',\n               '2017-01-09', '2017-01-10',\n               ...\n               '2018-12-22', '2018-12-23', '2018-12-24', '2018-12-25',\n               '2018-12-26', '2018-12-27', '2018-12-28', '2018-12-29',\n               '2018-12-30', '2018-12-31'],\n              dtype='datetime64[ns]', name='date', length=730, freq=None)"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/index.html#import-libraries",
    "href": "posts/2023-12-9-transport-emission/index.html#import-libraries",
    "title": "Vehicles emission affects to the climate change",
    "section": "Import libraries",
    "text": "Import libraries\n\n\nCode\nlibrary(broom)\nlibrary(readr)\nlibrary(gt)\nlibrary(modelr)\nlibrary(lubridate)\nlibrary(xtable)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(tsibble)\nlibrary(sjPlot)\nlibrary(knitr)\nlibrary(here)\nlibrary(ggpubr)\nlibrary(jtools)\n\n\nrm(list = ls())\n\n\nhere::i_am(\"index.qmd\")\n\noptions(scipen = 999) # disable scientific notation"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/index.html#import-data-and-clean-up",
    "href": "posts/2023-12-9-transport-emission/index.html#import-data-and-clean-up",
    "title": "Vehicles emission affects to the climate change",
    "section": "Import Data and Clean up",
    "text": "Import Data and Clean up\n\n\nCode\n# ==============earth surface temperature data===============\ntemperature &lt;- read_csv(\"data/temperature_fig-1.csv\")\ncolnames(temperature) &lt;- c(\"year\", \"temp\", \"temp2\", \"temp3\")\n\n# Remove rows 1 to 6\ntemperature &lt;- temperature[-c(1:6), ]\n\n# Change row 7 to become row 1\nrow_to_move &lt;- temperature[7, ]\ntemperature &lt;- rbind(row_to_move, temperature[-7, ])\n\ntemperature$year &lt;- as.numeric(temperature$year)\ntemperature$temp &lt;- as.numeric(temperature$temp)\n\n# ==========vehicle information including co2 emission each car by year===============\nvehicle_info &lt;- read_csv(\"data/vehicle_info.csv\")\n\nnames(vehicle_info) &lt;- gsub(\" \", \"_\", names(vehicle_info))\nnames(vehicle_info) &lt;- gsub(\"-\", \"_\", names(vehicle_info))\nnames(vehicle_info) &lt;- gsub(\"/\", \"_\", names(vehicle_info))\nnames(vehicle_info) &lt;- gsub(\"[()]\", \"\", names(vehicle_info))\nvehicle_info$Model_Year &lt;- gsub(\"Prelim\\\\.\\\\s*\", \"\", vehicle_info$Model_Year)\nnames(vehicle_info)\n\n\n [1] \"Model_Year\"               \"Regulatory_Class\"        \n [3] \"Vehicle_Type\"             \"Production_Share\"        \n [5] \"Real_World_MPG\"           \"Real_World_MPG_City\"     \n [7] \"Real_World_MPG_Hwy\"       \"Real_World_CO2_g_mi\"     \n [9] \"Real_World_CO2_City_g_mi\" \"Real_World_CO2_Hwy_g_mi\" \n[11] \"Weight_lbs\"               \"Horsepower_HP\"           \n[13] \"Footprint_sq._ft.\"       \n\n\nCode\n# Function to check if a column can be converted to numeric\nis_numeric &lt;- function(x) {\n  all(!is.na(as.numeric(x)))\n}\n\n# Convert columns with numeric values as characters to numeric type, keep others as character\nvehicle_info &lt;- vehicle_info %&gt;%\n  mutate_if(~is.character(.) && all(sapply(., is_numeric)), as.numeric, na.rm = TRUE)\n\ncolnames(vehicle_info)[colnames(vehicle_info) == \"Model_Year\"] &lt;- \"year\"\n\nvehicle &lt;- left_join(temperature, vehicle_info, by = join_by(year))\n\n# ==========Accumulate emission===============\ncumulative_emissions &lt;- read_csv(\"data/cumulative-co-emissions.csv\")\n\nco2 &lt;- cumulative_emissions %&gt;%\n  filter(Entity == \"United States\") \n\ncolnames(co2) &lt;- c(\"nation\", \"nation1\", \"year\", \"accu_emission\") \n\nemission &lt;- left_join(vehicle, co2, by = join_by(year))\n\n# ==========Accumulate emission===============\ntransport_emission_rate &lt;- read_csv(\"data/emission_percent_transport.csv\")\ncolnames(transport_emission_rate) &lt;- c(\"year\", \"trp_emission_rate\")\n\ntransport_emission &lt;- full_join(emission, transport_emission_rate, by = join_by(year))\n\n## ========== count car ================\ncount_car &lt;- read_csv(\"data/car2.csv\")\n\n# Estimate the number of cars for years ranging from 1900 to 2022 using interpolation\nestimated_cars &lt;- approx(count_car$year, count_car$car, xout = 1900:2022)$y \n\nestimated_cars_data &lt;- data.frame(year = 1900:2022, number_of_car = estimated_cars)\n\nestimate_n_cars &lt;- full_join(transport_emission, estimated_cars_data, by = join_by(year))\n\npercent_emission &lt;- estimate_n_cars %&gt;% \n  mutate(transport_emission = accu_emission*trp_emission_rate*0.01)\n\nfinal &lt;- percent_emission %&gt;%      \n       mutate(emission_n_car = transport_emission/number_of_car) %&gt;% subset(year &gt;= 1975)\n\n## ================ Filter data starting from the year 1975 ===============\nfinal_subset &lt;- final %&gt;%\n  group_by(Regulatory_Class, Vehicle_Type) %&gt;% \n  filter(Regulatory_Class == \"All\", Vehicle_Type == \"All\")"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/index.html#data-explore",
    "href": "posts/2023-12-9-transport-emission/index.html#data-explore",
    "title": "Vehicles emission affects to the climate change",
    "section": "Data explore",
    "text": "Data explore\n\nEarth Surface Temperature: This dataset, sourced from the EPA, provides information on the surface temperature, specifically focusing on Ferrnite.\nVehicle: Within EPA dataset, various pieces of information are available.\n\nReal_World_CO2_g_mi: This metric represents the emissions per car and is crucial for assessing the efficiency of vehicles in reducing CO2 emissions.\nRegulatory_Class: This classification helps determine whether a vehicle is a car or a truck.\n\nAccumulative Emission: This data originated from ‘Our World in Data’\nTransportation Emission: This dataset, obtained from the WorldBank, sheds light on emissions related to transportation.\nNumber of Vehicles: Unfortunately, there is no dataset available on the current website. However, projections for the years 1900, 1901, 2020, 2021, 2022, and 2023 have been included in this dataset. (Data availability)"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/index.html#analysis",
    "href": "posts/2023-12-9-transport-emission/index.html#analysis",
    "title": "Vehicles emission affects to the climate change",
    "section": "Analysis",
    "text": "Analysis\n\nLinear Regression Model: Earth’s Surface Temperature and Emissions from Transport\nThe linear regression model examining the relationship between Earth’s surface temperature and emissions from transport is represented as:\n\\[\\text{Ave. Earth surface Temperature} = \\beta_0 + \\beta_1 \\text{emisson from transport} + \\epsilon\\]\n\nPlot\n\n\nCode\n# Create a line plot to visualize the relationship between transportation emissions and Earth surface temperature over the years\n\n# Define the plot using ggplot\ntemp_per_emssion_by_year &lt;- ggplot(final, aes(x = transport_emission, y = temp)) +\n  geom_line() +\n  geom_smooth(linetype = \"dashed\") +\n  labs(x = \"Transportation Emission (CO2e tonne)\", y = \"Earth Surface Temperature (F)\", title = \"Emission per Temperature (from 1975)\") +\n  theme_minimal()\n\n# Display the plot\ntemp_per_emssion_by_year\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: Removed 57 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 57 rows containing missing values (`geom_line()`).\n\n\n\n\n\nThese findings suggest that around 32% of the variability in transportation emissions can be explained by Earth surface temperature. This aligns with our scatter plot, depicting a consistently strong positive relationship. The favorable F-statistics and low p-values further indicate that the model provides a good fit to the data. Due to low \\(R^2\\) , it need to find the better fit.\n\n\nCode\n# Fit a linear regression model\nmodel &lt;- lm(temp ~ transport_emission, data = final_subset)\n\n# Display a summary of the regression analysis\nsumm(model)\n\n\n\n\n\n\nObservations\n40 (7 missing obs. deleted)\n\n\nDependent variable\ntemp\n\n\nType\nOLS linear regression\n\n\n\n\n\n\n\n\nF(1,38)\n17.96\n\n\nR²\n0.32\n\n\nAdj. R²\n0.30\n\n\n\n\n\n\n\n\n\nEst.\nS.E.\nt val.\np\n\n\n\n\n(Intercept)\n-1.26\n0.48\n-2.65\n0.01\n\n\ntransport_emission\n0.00\n0.00\n4.24\n0.00\n\n\n\n Standard errors: OLS\n\n\n\n\n\n\n\n\n\n\n\nThis seems to exhibit a slightly better fit, as indicated by the higher \\(R^2\\) and adjusted \\(R^2\\) values. The Earth’s temperature increases with the rise in emissions from the transportation sector. Notably, there are significant errors associated with omitted variables, such as emissions from other sectors, including industry and power plants. Additionally, the scope needs to expand beyond the USA to encompass a global perspective.\n\n\nCode\n# Fit a linear regression model\nmodel_log &lt;- lm(temp ~ log(transport_emission), data = final_subset)\n\n# Display a summary of the regression analysis\nsumm(model_log)\n\n\n\n\n\n\nObservations\n40 (7 missing obs. deleted)\n\n\nDependent variable\ntemp\n\n\nType\nOLS linear regression\n\n\n\n\n\n\n\n\nF(1,38)\n19.98\n\n\nR²\n0.34\n\n\nAdj. R²\n0.33\n\n\n\n\n\n\n\n\n\nEst.\nS.E.\nt val.\np\n\n\n\n\n(Intercept)\n-48.56\n11.02\n-4.41\n0.00\n\n\nlog(transport_emission)\n1.96\n0.44\n4.47\n0.00\n\n\n\n Standard errors: OLS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLinear Regression Model: Emission per car and Year since Regulation\nThis model defines the how CAFE regulation effects to the transportation emission. This model explains the vehicle emission effects on CAFE regulation with number of vehicle.\n\\[\\text{Emission per car} = \\beta_0 + \\beta_2 \\text{Year since Regulation} + \\epsilon\\]\nIn this plot, emission per car decreasing since regulation started. There was no omitted variable in this model. Based on this information, we would like to how regulation affects on overall transport emission. This model proves that the model shows the interaction between the regulation and number of the car affects on the emission per car. Year since regulation and number of car are independent variables, but it is depended on emission per car variable.\n\n\nCode\n# Create a line plot using ggplot for 'emission_per_car' from the filtered data\none_car_per_emission&lt;- ggplot(final_subset, aes(x = year, y = Real_World_CO2_g_mi)) +\n  geom_jitter() +\n  geom_smooth(linetype = \"dashed\") +\n  labs(x = \"Year\",\n       y = \"Emission Economy (g/mi)\",\n       title = \"emission per car by year\") +\n  theme_minimal()\n\none_car_per_emission\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\nModel without Interaction: Total CO2 emission saving\n\\[\\text{emission per car} = \\beta_0 + \\beta_2 \\text{year since regulation} + \\beta_3 \\text{number of car} + \\epsilon\\]\n\\(\\beta_0\\): The predicted emission per car before the regulation is 476 grams per mile (mi/g).\n\\(\\beta_2\\): The emissions per car decrease by 5 grams per mile for every year since the regulation, holding the number of cars constant. The coefficient β₂ can be interpreted as the effect of an additional year since the regulation was implemented on emission savings or reduction of emission.\n\\(\\beta_3\\): This coefficient represents the estimated change in emission per car for each additional unit in the “number of car” variable while holding “year since regulation” constant. It implies that as the number of cars increases, overall emission is increasing.\n\nPlot\n\n\nCode\n# Create a scatter plot with a regression line\nggplot(final_subset, aes(x = year, y = Real_World_CO2_g_mi)) +\n  geom_jitter() +  # Scatter plot\n  geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE, color = \"blue\") +  # Regression line\n  labs(x = \"Year Since Regulation\", y = \"Emission Economy (g/mi)\", title = \"Total CO2 emission saving\")\n\n\n\n\n\nIn this analysis, p-value is 9.1e-9, which is &lt; 0.05 can reject null hypothesis. R square is pretty low, which is 0.5.\n\n\nCode\n## Convert 'year' to (year - 1974): Year in 1975 becomes 1.\nfinal_subset$years &lt;- final_subset$year - 1974\n\n## Fit a linear model without interaction\nmodel_not_int &lt;- lm(Real_World_CO2_g_mi ~ years + number_of_car, data = final_subset)\nsumm(model_not_int, digits = 10)\n\n\n\n\n\n\nObservations\n47\n\n\nDependent variable\nReal_World_CO2_g_mi\n\n\nType\nOLS linear regression\n\n\n\n\n\n\n\n\nF(2,44)\n23.9688718881\n\n\nR²\n0.5214152731\n\n\nAdj. R²\n0.4996614218\n\n\n\n\n\n\n\n\n\nEst.\nS.E.\nt val.\np\n\n\n\n\n(Intercept)\n476.2446425522\n111.8001104335\n4.2597868706\n0.0001060282\n\n\nyears\n-5.1880489159\n3.8176342030\n-1.3589696236\n0.1810818273\n\n\nnumber_of_car\n0.0000000533\n0.0000001314\n0.4057541837\n0.6868896864\n\n\n\n Standard errors: OLS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInteraction model: Total CO2 emission saving\n\\[\\text{emission per car} = \\beta_0 + \\beta_2 \\text{year since regulation} + \\beta_3 \\text{number of car} +\\beta_4 \\text{year since regulation x number of car} + \\epsilon\\]\n\\(\\beta_4\\): This is interaction term implies the influence of the number of car on emission per car slightly changes as the year since regulation starts and it is defined the barometer of total CO2 emission saving.\n\n\nCode\n# Create a scatter plot with a regression line\nggplot(final_subset, aes(x = year, y = Real_World_CO2_g_mi)) +\n  geom_jitter() +  # Scatter plot\n  geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE, color = \"blue\") +  # Regression line\n  labs(x = \"Year Since Regulation\", y = \"Emission Economy (g/mi)\", title = \"Total CO2 emission saving\") +\n  geom_abline(intercept = 690, slope = 0, linetype = \"solid\", color = \"red\")   # Red straight line\n\n\n\n\n\nIf there were no CAFE regulations since 1975, the red line in the plot would appear differently, assuming a steeper slope. Below the red line, it signifies the reduction in CO2 emissions as the number of cars increases. Even though the slope is 6.8e-9, it is telling that some of reduction of CO2 emission. Even though the slope is 6.8e-9, it indicates a measurable reduction in CO2 emissions. Additionally, the higher \\(R^2\\) and adjusted \\(R^2\\) values signify that this interaction model better fits the data and captures a greater proportion of the variability in emissions compared to the model without the interaction term.\n\n\nCode\n## Fit a linear model with interaction\nmodel_int &lt;- lm(Real_World_CO2_g_mi ~ years + number_of_car + years:number_of_car, data = final_subset)\n\nsumm(model_int, digits = 10)\n\n\n\n\n\n\nObservations\n47\n\n\nDependent variable\nReal_World_CO2_g_mi\n\n\nType\nOLS linear regression\n\n\n\n\n\n\n\n\nF(3,43)\n24.5633246590\n\n\nR²\n0.6315021888\n\n\nAdj. R²\n0.6057930392\n\n\n\n\n\n\n\n\n\nEst.\nS.E.\nt val.\np\n\n\n\n\n(Intercept)\n378.7346753916\n102.8984504157\n3.6806645179\n0.0006442009\n\n\nyears\n-25.7574887204\n6.6647727476\n-3.8647212284\n0.0003704727\n\n\nnumber_of_car\n0.0000002524\n0.0000001292\n1.9534542357\n0.0572918953\n\n\nyears:number_of_car\n0.0000000068\n0.0000000019\n3.5841371809\n0.0008572249\n\n\n\n Standard errors: OLS\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogit regression using Categorical response variable: New and Old Vehicle\nWe will further study the new vehicles have effectively reducing emission. This is the showing two plots, which old vehicle before 2000 year model, and new vehicle after 2000 year model with the linear line.\n\\[\\operatorname{logit}(p)=\\log \\left(\\frac{p}{1-p}\\right)=\\beta_0 + \\beta_1 \\times \\text{car per emission} + \\beta_2 \\times \\text{Model} + \\varepsilon \\]\n\n\nCode\n# Create a new variable 'new_brand' based on the year\n# Filter the dataset to include only \"Car\" and \"Truck\" in Regulatory_Class\nfinal_vehicle_type &lt;- final %&gt;% \n  mutate(new_brand = ifelse(year &gt; 2000, 'new', 'old')) %&gt;%\n  filter(Regulatory_Class %in% c(\"Car\", \"Truck\"))\n\n# Create a jitter plot to show CO2 emissions and new/old classification\nggplot(data = final_vehicle_type, aes(y = new_brand, x = Real_World_CO2_g_mi)) + \n  geom_jitter(width = 0, height = 0.05, alpha = 0.8) +\n  labs(x = \"CO2 Emission per Car\", y = \"Brand New\") +\n  theme_minimal()\n\n\n\n\n\nThis involves showcasing two plots: one for older vehicles predating the year 2000 model and another for newer vehicles following the 2000 model year, each presented with a linear trend line.\n\n\nCode\n# Create a binary variable 'brand_new' based on 'new_brand'\nfinal_vehicle_type &lt;- final_vehicle_type %&gt;%\n  mutate(brand_new = ifelse(new_brand == \"new\", 1, 0))\n\n# Create a jitter plot to visualize CO2 emissions and brand new classification\nbinary &lt;- ggplot(data = final_vehicle_type, aes(y = brand_new, x = Real_World_CO2_g_mi)) + \n  geom_jitter(width = 0, height = 0.05, alpha = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(x = \"CO2 Emission per Car\", y = \"Brand New\") \nbinary\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nThe odds ratio of 0.99 indicates that for each one-unit increase in the ‘emission per car’ there is an approximate 1% reduction in emissions for newer vehicle models compared to older ones, tending to exhibit approximately 1% lower emissions concerning their CO2 levels compared to older models. This association highlights the potential for newer vehicle models to contribute slightly less to CO2 emissions in real-world scenarios compared to their older counterparts.\n\n\nCode\n# Create a logistic regression model for predicting 'brand_new'\nmod_new_car &lt;- glm(brand_new ~ Real_World_CO2_g_mi, data = final_vehicle_type, family = 'binomial') \n\n# Create a table summarizing the logistic regression model\nmod_new_car %&gt;% tab_model()\n\n\n\n\n\n \nbrand new\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n260.62\n61.89 – 1258.49\n&lt;0.001\n\n\nReal World CO2 g mi\n0.99\n0.98 – 0.99\n&lt;0.001\n\n\nObservations\n329\n\n\nR2 Tjur\n0.227\n\n\n\n\n\n\n\n\n\nVisualizing logistic regression\nThis is combining two models: linear regression model and logistic regression model, proving insight into both linear and non-linear relationships between old and new vehicles variables.\n\n\nCode\n# Create a binary plot with linear and logistic regression lines\nggplot(data = final_vehicle_type, aes(y = brand_new, x = Real_World_CO2_g_mi)) +\n  geom_jitter(width = 0, height = 0.05, alpha = 0.8) +\n  labs(x = \"CO2 Emission per Car\", y = \"Brand New\") +\n  geom_smooth(method = \"lm\", se = FALSE) +  # Add linear regression line\n  geom_smooth(method = \"glm\", se = FALSE, color = \"red\", \n              method.args = list(family = \"binomial\"))  # Add logistic regression line in red\n\n\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nLogistic regression: Truck and Car\nIn the context of environmental impact and vehicle emissions, there’s a growing concern about the differences in CO2 emissions per mile between different types of vehicles. To evaluate and address these concerns, a statistical analysis is conducted to compare the mean CO2 emissions per mile between two categories of vehicles: cars and trucks. This analysis aims to determine whether there’s a significant difference in CO2 emissions per mile between these vehicle types.\n\\[\\operatorname{logit}(p)=\\log \\left(\\frac{p}{1-p}\\right)=\\beta_0 + \\beta_1 \\times \\text{car per emission} + \\beta_2 \\times \\text{Truck} + \\varepsilon \\]\nThe coefficient related to ‘Regulatory_ClassTruck’ in the logistic regression model indicates an interesting finding. It suggests that the odds of a brand new car reducing its emissions are approximately 22 times higher compared to trucks. This translates to an approximate decrease of emissions by 2.8% in a new truck model compared to older models. This suggests that trucks have not significantly improved their efficiency over the span of nearly 50 years.\n\n\nCode\n# Fit the logistic regression model\nmod &lt;- glm(brand_new ~ Real_World_CO2_g_mi + Regulatory_Class, \n           data = final_vehicle_type, family = binomial)\n\n# Extract coefficients, exponentiate, and tidy the results\nexp(coef(mod)) \n\n\n          (Intercept)   Real_World_CO2_g_mi Regulatory_ClassTruck \n        39449.4440170             0.9728793            22.0806972 \n\n\n\nHistogram\nThis diagram clearly shows that the distribution of vehicle emissions is highly right-skewed compared to trucks. This indicates that the Environmental Protection Agency (EPA) has successfully regulated car emissions. However, there is a need for more effort to reduce emissions from trucks.\n\n\nCode\ngghistogram(final_vehicle_type, x = \"Real_World_CO2_g_mi\",\n   add = \"mean\", rug = TRUE,\n   color = \"Regulatory_Class\", fill = \"Regulatory_Class\",\n   palette = c(\"#00AFBB\", \"#E7B800\")) + \n  labs(title = \"Comparison of CO2 Emissions between Car and Truck Groups\")\n\n\n\n\n\nThis finding aligns with EPA’s Clean Truck Plan, unveiled on August 5, 2021. The plan aims to curb CO2 gas emissions and other harmful air pollutants from heavy-duty trucks. It outlines a series of three rulemakings that will come into effect for heavy-duty engines and vehicles starting from the model year 2027.\n\n\n\nHypothesis to comparing two models: Car and Truck\n\\[H_{0}: \\mu_{car} - \\mu_{Truck} = 0\\]\n\\[H_{A}: \\mu_{car} - \\mu_{Truck} \\neq 0\\]\nThe p-value of 2.22e-14 is less than any commonly used significance level (such as 0.05), indicating strong evidence to reject the null hypothesis. Therefore, there is strong evidence to suggest that there is a significant difference in CO2 emissions per mile between the car and truck.\nThere is a 95% confidence that the range between 84.8 and 127.7 includes the true difference in CO2 emissions per mile between cars and trucks.\n\n\nCode\n# in Regulatory_Class, \"All\", \"Car\", and \"Truck\", so only left \"Car\" and \"Truck\" in dataset. \nfinal_class &lt;- final %&gt;% filter(Regulatory_Class %in% c(\"Car\", \"Truck\"))\n\n# Separate data into 'Car' and 'Truck' groups\ncar &lt;- final_class %&gt;% filter(Regulatory_Class == \"Car\")\ntruck &lt;- final_class %&gt;% filter(Regulatory_Class == \"Truck\")\n\n# Conduct a t-test to compare CO2 emissions between 'Car' and 'Truck' groups\nt_test_result &lt;- t.test(truck$Real_World_CO2_g_mi, car$Real_World_CO2_g_mi, conf.level = 0.95)\n# Uncomment the next line to display the summary statistics using tab_model\nt_test_result\n\n\n\n    Welch Two Sample t-test\n\ndata:  truck$Real_World_CO2_g_mi and car$Real_World_CO2_g_mi\nt = 9.7546, df = 283.31, p-value &lt; 0.00000000000000022\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n  84.81797 127.70204\nsample estimates:\nmean of x mean of y \n  520.268   414.008"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/index.html#visualizing-logistic-regression",
    "href": "posts/2023-12-9-transport-emission/index.html#visualizing-logistic-regression",
    "title": "Vehicles emission affects to the climate change",
    "section": "Visualizing logistic regression",
    "text": "Visualizing logistic regression\nThis is combining two models: linear regression model and logistic regression model, proving insight into both linear and non-linear relationships between old and new vehicles variables.\n\n\nCode\n# Create a binary plot with linear and logistic regression lines\nggplot(data = final_vehicle_type, aes(y = brand_new, x = Real_World_CO2_g_mi)) +\n  geom_jitter(width = 0, height = 0.05, alpha = 0.8) +\n  labs(x = \"CO2 Emission per Car\", y = \"Brand New\") +\n  geom_smooth(method = \"lm\", se = FALSE) +  # Add linear regression line\n  geom_smooth(method = \"glm\", se = FALSE, color = \"red\", \n              method.args = list(family = \"binomial\"))  # Add logistic regression line in red\n\n\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/index.html#logistic-regression-truck-and-car",
    "href": "posts/2023-12-9-transport-emission/index.html#logistic-regression-truck-and-car",
    "title": "Vehicles emission affects to the climate change",
    "section": "Logistic regression: Truck and Car",
    "text": "Logistic regression: Truck and Car\nIn the context of environmental impact and vehicle emissions, there’s a growing concern about the differences in carbon dioxide (CO2) emissions per mile between different types of vehicles. To evaluate and address these concerns, a statistical analysis is conducted to compare the mean CO2 emissions per mile between two categories of vehicles: cars and trucks. This analysis aims to determine whether there’s a significant difference in CO2 emissions per mile between these vehicle types.\n\\[\\operatorname{logit}(p)=\\log \\left(\\frac{p}{1-p}\\right)=\\beta_0 + \\beta_1 \\times \\text{car per emission} + \\beta_2 \\times \\text{Truck} + \\varepsilon \\]\n\n\nCode\n# Fit the logistic regression model\nmod &lt;- glm(brand_new ~ Real_World_CO2_g_mi + Regulatory_Class, \n           data = final_vehicle_type, family = binomial)\n\n# Extract coefficients, exponentiate, and tidy the results\nexp(coef(mod)) \n\n\n          (Intercept)   Real_World_CO2_g_mi Regulatory_ClassTruck \n        39449.4440170             0.9728793            22.0806972 \n\n\nThe coefficient related to ‘Regulatory_ClassTruck’ in the logistic regression model indicates an interesting finding. It suggests that the odds of a brand new car reducing its emissions are approximately 22 times higher compared to trucks. This translates to an approximate decrease of emissions by 2.8% in a new truck model compared to older models. This suggests that trucks have not significantly improved their efficiency over the span of nearly 50 years.\nThis finding aligns with EPA’s Clean Truck Plan, unveiled on August 5, 2021. The plan aims to curb greenhouse gas emissions and other harmful air pollutants from heavy-duty trucks. It outlines a series of three rulemakings that will come into effect for heavy-duty engines and vehicles starting from the model year 2027.\n\nHypothesis to comparing two models: Car and Truck\n\\[H_{0}: \\mu_{car} - \\mu_{Truck} = 0\\]\n\\[H_{A}: \\mu_{car} - \\mu_{Truck} \\neq 0\\]\nThe p-value of 2.22e-14 is less than any commonly used significance level (such as 0.05), indicating strong evidence to reject the null hypothesis. Therefore, there is strong evidence to suggest that there is a significant difference in CO2 emissions per mile between the car and truck.\nThere is a 95% confidence that the range between 84.8 and 127.7 includes the true difference in CO2 emissions per mile between cars and trucks.\n\n\nCode\n# Separate data into 'Car' and 'Truck' groups\ncar &lt;- final %&gt;% filter(Regulatory_Class == \"Car\")\ntruck &lt;- final %&gt;% filter(Regulatory_Class == \"Truck\")\n\n# Conduct a t-test to compare CO2 emissions between 'Car' and 'Truck' groups\nt_test_result &lt;- t.test(truck$Real_World_CO2_g_mi, car$Real_World_CO2_g_mi, conf.level = 0.95)\nt_test_result\n\n\n\n    Welch Two Sample t-test\n\ndata:  truck$Real_World_CO2_g_mi and car$Real_World_CO2_g_mi\nt = 9.7546, df = 283.31, p-value &lt; 0.00000000000000022\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n  84.81797 127.70204\nsample estimates:\nmean of x mean of y \n  520.268   414.008 \n\n\nCode\n# Uncomment the next line to display the summary statistics using tab_model\n# t_test_result %&gt;% tab_model()"
  },
  {
    "objectID": "posts/2023-12-14-marine/index.html",
    "href": "posts/2023-12-14-marine/index.html",
    "title": "Mapping the global potential for marine aquaculture",
    "section": "",
    "text": "Repository: https://github.com/khj9759/marine_farming"
  },
  {
    "objectID": "posts/2023-12-14-marine/index.html#background",
    "href": "posts/2023-12-14-marine/index.html#background",
    "title": "Mapping the global potential for marine aquaculture",
    "section": "Background",
    "text": "Background\nMarine farming could be an important source of sustainable protein worldwide, better than land-based meat production with (Gentry et al) globally mapped potential marine farming areas, considering factors like ship traffic and oxygen levels.\nFind the best Exclusive Economic Zones (EEZ) on the West Coast of the US for cultivating various oyster species. Previous research indicates that oysters thrive under specific conditions:\n\nsea surface temperature: 11-30°C\ndepth: 0-70 meters below sea level"
  },
  {
    "objectID": "posts/2023-12-14-marine/index.html#datasets",
    "href": "posts/2023-12-14-marine/index.html#datasets",
    "title": "Mapping the global potential for marine aquaculture",
    "section": "Datasets",
    "text": "Datasets\n\nSea Surface Temperature\nTo characterize the average sea surface temperature in the region, use the yearly average from 2008 to 2012. The data we’re using is initially derived from NOAA’s 5km Daily Global Satellite Sea Surface Temperature Anomaly v3.1.\n\n\nBathymetry\nTo assess the ocean’s depth, we will utilize the following: General Bathymetric Chart of the Oceans (GEBCO).\n\n\nExclusive Economic Zones\nEstablish maritime borders by delineating Exclusive Economic Zones along the west coast of the United States starting from Marineregions.org."
  },
  {
    "objectID": "posts/2023-12-14-marine/index.html#workflow",
    "href": "posts/2023-12-14-marine/index.html#workflow",
    "title": "Mapping the global potential for marine aquaculture",
    "section": "Workflow",
    "text": "Workflow\nBelow is an outline of the steps you should consider taking to achieve the assignment tasks.\n\nlibrary(sf)\nlibrary(dplyr)\nlibrary(spData)\nlibrary(here)\nlibrary(raster)\nlibrary(terra)\nlibrary(tmap)\nlibrary(kableExtra)\n\nrm(list = ls())\nhere::i_am(\"index.qmd\")\n\n\nClean data\nTo begin, load essential packages and set the path, preferably utilizing the “here” package. Proceed by reading the West Coast Exclusive Economic Zones shapefile. Next, import sea surface temperature (SST) rasters for the years 2008 to 2012, combining them into a raster stack. Additionally, read the bathymetry raster (depth.tif). Ensure that all data share a consistent coordinate reference system and reproject any datasets that deviate from the specified projection.\n\n# load necessary package \n\n# set the path \nlist.files(here(\"data\"), pattern = \"average *.tif\", full.names = TRUE)\n\ncharacter(0)\n\n# read SST rasters\nsst_2008 &lt;- rast(here( \"data\",\"average_annual_sst_2008.tif\"))\nsst_2009 &lt;- rast(here(\"data\",\"average_annual_sst_2009.tif\"))\nsst_2010 &lt;- rast(here(\"data\",\"average_annual_sst_2010.tif\"))\nsst_2011 &lt;- rast(here(\"data\",\"average_annual_sst_2011.tif\"))\nsst_2012 &lt;- rast(here(\"data\",\"average_annual_sst_2012.tif\"))\n\n# rename the column of SST rasters\nnames(sst_2008) &lt;- c(\"temp_2008\") \nnames(sst_2009) &lt;- c(\"temp_2009\") \nnames(sst_2010) &lt;- c(\"temp_2010\") \nnames(sst_2011) &lt;- c(\"temp_2011\") \nnames(sst_2012) &lt;- c(\"temp_2012\") \n\n# combine SST rasters \nall_sst &lt;- c(sst_2008,\n             sst_2009,\n             sst_2010,\n             sst_2011,\n             sst_2012)\n\n# read West Coast EEZ \nwc &lt;- st_read(here(\"data\", \"wc_regions_clean.shp\"))\n\nReading layer `wc_regions_clean' from data source \n  `/Users/haejinkim/Documents/UCSB/mysite/posts/2023-12-14-marine/data/wc_regions_clean.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -129.1635 ymin: 30.542 xmax: -117.097 ymax: 49.00031\nGeodetic CRS:  WGS 84\n\n# read in bathymetry\ndepth &lt;- rast(\"data/depth.tif\")\n\n# check the crs\n#st_crs(all_sst)  # 9122 \n#st_crs(depth) # 4326 \n#st_crs(wc) # 4326\n\n# reproject using the terra way\nall_sst_reproj &lt;- project(all_sst, wc)\n\n# check the crs\nst_crs(all_sst_reproj) == st_crs(depth) # true\n\n[1] TRUE\n\n\n\n\nProcess data\nTo proceed, we must process the Sea Surface Temperature (SST) and depth data for eventual combination. The SST and depth data possess slight variations in resolution, extents, and positions. Since we aim to maintain the integrity of the underlying depth data, we’ll employ the nearest neighbor approach to resample it and align it with the SST data.\nCompute the average Sea Surface Temperature (SST) for the period 2008-2012. Convert the SST values from Kelvin to Celsius by subtracting 273.15. Adjust the extent of the depth raster to match that of the SST raster. Acknowledge the differing resolutions between the SST and depth data. Resample the depth data using the nearest neighbor approach to align with the resolution of the SST data. Confirm alignment in resolution, extent, and coordinate reference system between the depth and SST datasets. Evaluate the possibility of stacking the rasters for compatibility verification.\n\n# compute mean SST \nmean_sst &lt;- mean(all_sst_reproj)\n\n# convert sst from K to C\nmean_sst_c &lt;- mean_sst - 273.15\n\n# crop depth rast to match the extent of the SST rast\ndepth_cropped &lt;- crop(depth, terra::ext(mean_sst_c)) \n\n# using nearest neighbor approach to resample\ndepth_resampled &lt;- resample(depth_cropped,\n                mean_sst_c,\n                method = \"near\")\n\n# stack to check if they have the same resolution\nresolution_test &lt;- c(depth_resampled,\n                       all_sst_reproj) # no error message means same resolution \n\n\n\nFind suitable locations\nTo find suitable locations for marine aquaculture, reclassify SST and depth data based on oyster suitability. Set values to 1 for suitable locations and NA for unsuitable ones. Identify areas satisfying both SST and depth conditions using the lapp() function to overlay and multiply cell values.\n\n# set suitable values \nrcl_sst &lt;- matrix(c(-Inf, 11, NA, \n                     11, 30, 1, \n                    30, Inf, NA), \n              ncol = 3, byrow = TRUE) #anything outside of range is NA\n\nrcl_depth &lt;- matrix(c(-Inf, -70, NA,\n                      -70, 0, 1,\n                       0, Inf, NA),\n                    ncol = 3, byrow = TRUE)\n\n# reclassifying raster using a reclassification matrix\nsuitable_sst  &lt;- classify(mean_sst_c,\n                     rcl = rcl_sst, \n                     include.lowest = TRUE)\n\nsuitable_depth &lt;- classify(depth_resampled,\n                     rcl = rcl_depth,\n                     include.lowest = TRUE)\n\n# define function\nmult_fun &lt;- function(x, y) {\n  return(x*y)}\n\n# find locations that satisfy both conditions\noverlay_suitable &lt;- lapp(c(suitable_sst, suitable_depth), mult_fun)\n\nplot(overlay_suitable)\n\n\n\n\n\n\nFind the pixel area\nThis is a discovery determined manually using the Earth’s radius.\n\n# figure out one pixel size and overall size \nres(overlay_suitable) # 0.04165905, 0.04165905\n\n[1] 0.04165905 0.04165905\n\ndim(overlay_suitable) # 480 x 480 \n\n[1] 480 408   1\n\next(overlay_suitable) # -131.98475233, -114.987860801091, 29.9920799888132, 49.988422964 (xmin, xmax, ymin, ymax)\n\nSpatExtent : -131.98475233, -114.987860801091, 29.9920799888132, 49.988422964 (xmin, xmax, ymin, ymax)\n\n# Assuming the CRS is in decimal degrees\npixel_size_degrees &lt;- 0.04165905  # Replace this with your actual pixel size in degrees\n\n# Convert degrees to kilometers (approximation)\nlatitude_degrees &lt;- mean(c(29.9920799888132, 49.988422964))  # Mean latitude of the extent\nlongitude_degrees &lt;- mean(c(-131.98475233, -114.987860801091))  # Mean longitude of the extent\n\n# Conversion factors (approximation)\nkm_per_degree_latitude &lt;- 111  # Approximation for latitude (1 degree of latitude is approximately 111 km)\nkm_per_degree_longitude &lt;- 111 * cos(latitude_degrees * pi / 180)  # Approximation for longitude\n\n# Convert pixel size from degrees to kilometers\npixel_size_km_x &lt;- pixel_size_degrees * km_per_degree_longitude\npixel_size_km_y &lt;- pixel_size_degrees * km_per_degree_latitude\npixel_area_km &lt;- pixel_size_km_x *pixel_size_km_y\n\n# Display the converted pixel sizes in kilometers\nprint(paste(\"Pixel Size in Kilometers (X):\", pixel_size_km_x))\n\n[1] \"Pixel Size in Kilometers (X): 3.54281357277252\"\n\nprint(paste(\"Pixel Size in Kilometers (Y):\", pixel_size_km_y))\n\n[1] \"Pixel Size in Kilometers (Y): 4.62415455\"\n\nprint(paste(\"Demension of Pixel Size in Kilometers (X*Y):\", pixel_area_km)) # 16.382517\n\n[1] \"Demension of Pixel Size in Kilometers (X*Y): 16.3825175023378\"\n\n\n\n\nDetermine the most suitable EEZ\nWe aim to assess the overall suitable area within each Exclusive Economic Zone (EEZ) to prioritize zones. To achieve this, identify suitable cells within West Coast EEZs, calculate the area of grid cells, and determine the total suitable area within each EEZ.\nFind the percentage of suitability for each zone, considering rasterizing EEZ data and potentially joining the suitable area by region onto the EEZ vector data.\n\n# making area to grid cells and mask it \nwc_rast &lt;- rasterize(wc, overlay_suitable, \n                           field = \"rgn\", na.rm = TRUE)\n\nwc_mask &lt;- mask(wc_rast,overlay_suitable)\n\n# find area of each suitable zones with zonal() in each of 5 regions of EEZ\n## no need to use zonal \nwc_zonal &lt;- zonal(overlay_suitable, wc_mask, na.rm = TRUE, fun = \"sum\")\ncolnames(wc_zonal)[colnames(wc_zonal) == \"lyr1\"] &lt;- \"count_pixel\"\n\n## use zonal\nwc_zonal_summary &lt;- wc_zonal %&gt;% \n  group_by(rgn) %&gt;% \n  mutate(suitable_area = count_pixel*pixel_area_km)  # pixel size converts to km^2\n\n#join data\nwc_suitable_EEZ &lt;- full_join(wc, wc_zonal_summary , by = \"rgn\") %&gt;% \n  mutate(count_pixel, \n         percentage_suitable = (suitable_area/area_km2 * 100),\n         .before = geometry)\n\nwc_suitable_EEZ %&gt;% kable() %&gt;% kable_minimal()\n\n\n\n\nrgn\nrgn_key\narea_m2\nrgn_id\narea_km2\ncount_pixel\nsuitable_area\npercentage_suitable\ngeometry\n\n\n\n\nOregon\nOR\n179994061293\n1\n179994.06\n71\n1163.1587\n0.6462206\nMULTIPOLYGON (((-123.4318 4...\n\n\nNorthern California\nCA-N\n164378809215\n2\n164378.81\n11\n180.2077\n0.1096295\nMULTIPOLYGON (((-124.2102 4...\n\n\nCentral California\nCA-C\n202738329147\n3\n202738.33\n238\n3899.0392\n1.9231880\nMULTIPOLYGON (((-122.9928 3...\n\n\nSouthern California\nCA-S\n206860777840\n4\n206860.78\n197\n3227.3559\n1.5601585\nMULTIPOLYGON (((-120.6505 3...\n\n\nWashington\nWA\n66898309678\n5\n66898.31\n162\n2653.9678\n3.9671673\nMULTIPOLYGON (((-122.7675 4...\n\n\n\n\n\n\n\n\n\nVisualize results\nThis visual map displays the regions where conditions are suitable for oyster cultivation. The majority of oysters thrive notably well in the southern and central regions of California. Explore these geographical patterns to gain a comprehensive understanding of oyster distribution.\n\n#set to interactive mode\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntmap_last()\n\nWarning in tmap_last(): A map has not been created yet\n\n\nNULL\n\n#map for total suitable area for oysters by region\noysters &lt;- tm_basemap(\"OpenStreetMap.Mapnik\") +\n  tm_shape(wc_suitable_EEZ) +\n  tm_polygons(col = 'suitable_area',\n              palette = 'RdYlBu',\n              alpha = 0.75,\n              border.col = 'black',\n              title = \"Total Suitable Area\") +\n  tm_text(\"rgn\", size = 0.54) +\n  tm_scale_bar(position = c(\"left\", \"right\"))\n \noysters\n\n\n\n\n\n\nThis illustrates the percentage of the suitable area for oyster within each region. Conversely, Washington State exhibits a significant concentration of oyster habitats.\n\n#set to interactive mode\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntmap_last()\n\n\n\n\n\n#map for total suitable area for oysters by region\noysters_percent &lt;- tm_basemap(\"OpenStreetMap.Mapnik\") +\n  tm_shape(wc_suitable_EEZ) +\n  tm_polygons(col = 'percentage_suitable',\n              palette = 'RdYlBu',\n              alpha = 0.75,\n              border.col = 'black',\n              title = \"Total Percent of Suitable Area\") +\n  tm_text(\"rgn\", size = 0.54) +\n  tm_scale_bar(position = c(\"left\", \"right\"))\n \noysters_percent"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/index.html#highlights",
    "href": "posts/2023-12-9-transport-emission/index.html#highlights",
    "title": "Vehicles emission affects to the climate change",
    "section": "Highlights",
    "text": "Highlights\n\nLinear regression\nMulti-linear regression\nInteraction model\nLogit regression\nNull Hypothesis"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/index.html#conclusion",
    "href": "posts/2023-12-9-transport-emission/index.html#conclusion",
    "title": "Vehicles emission affects to the climate change",
    "section": "Conclusion",
    "text": "Conclusion\nThe analysis highlights the impact of Earth’s surface temperature and regulatory standards, like Corporate Average Fuel Economy (CAFE), on reducing emissions per car. Logistic regression underscores the lower emissions of newer vehicles, emphasizing the need for ongoing technological advancements. The significant disparity in emissions between cars and trucks calls for targeted efforts to enhance truck efficiency.\n\nFuture work\nFuture efforts should prioritize the development of an improved model to enhance both the R-squared value and p-value. Additionally, addressing omitted variable bias is essential for refining this modeling approach. Continuous policy evaluation is crucial, especially in light of initiatives like the Clean Truck Plan. Strengthening public awareness and advocacy efforts will further promote sustainable practices in transportation.\n\n\nReference\nNHTSA. “Corporate Average Fuel Economy” Accessed Dec 15, 2023. https://www.scribbr.com/category/citing-sources/"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/transport_emission.html",
    "href": "posts/2023-12-9-transport-emission/transport_emission.html",
    "title": "Vehicles emission affects to the climate change",
    "section": "",
    "text": "Code\nlibrary(broom)\nlibrary(readr)\nlibrary(gt)\nlibrary(modelr)\nlibrary(lubridate)\nlibrary(xtable)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(tsibble)\nlibrary(sjPlot)\nlibrary(knitr)\nlibrary(here)\nlibrary(ggpubr)\nlibrary(jtools)\n\n\nrm(list = ls())\n\n\nhere::i_am(\"transport_emission.Rmd\")\n\noptions(scipen = 999) # disable scientific notation"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/transport_emission.html#import-libraries",
    "href": "posts/2023-12-9-transport-emission/transport_emission.html#import-libraries",
    "title": "Vehicles emission affects to the climate change",
    "section": "",
    "text": "Code\nlibrary(broom)\nlibrary(readr)\nlibrary(gt)\nlibrary(modelr)\nlibrary(lubridate)\nlibrary(xtable)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(tsibble)\nlibrary(sjPlot)\nlibrary(knitr)\nlibrary(here)\nlibrary(ggpubr)\nlibrary(jtools)\n\n\nrm(list = ls())\n\n\nhere::i_am(\"transport_emission.Rmd\")\n\noptions(scipen = 999) # disable scientific notation"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/transport_emission.html#import-data-and-clean-up",
    "href": "posts/2023-12-9-transport-emission/transport_emission.html#import-data-and-clean-up",
    "title": "Vehicles emission affects to the climate change",
    "section": "Import Data and Clean up",
    "text": "Import Data and Clean up\n\n\nCode\n# ==============earth surface temperature data===============\ntemperature &lt;- read_csv(\"data/temperature_fig-1.csv\")\ncolnames(temperature) &lt;- c(\"year\", \"temp\", \"temp2\", \"temp3\")\n\n# Remove rows 1 to 6\ntemperature &lt;- temperature[-c(1:6), ]\n\n# Change row 7 to become row 1\nrow_to_move &lt;- temperature[7, ]\ntemperature &lt;- rbind(row_to_move, temperature[-7, ])\n\ntemperature$year &lt;- as.numeric(temperature$year)\ntemperature$temp &lt;- as.numeric(temperature$temp)\n\n# ==========vehicle information including co2 emission each car by year===============\nvehicle_info &lt;- read_csv(\"data/vehicle_info.csv\")\n\nnames(vehicle_info) &lt;- gsub(\" \", \"_\", names(vehicle_info))\nnames(vehicle_info) &lt;- gsub(\"-\", \"_\", names(vehicle_info))\nnames(vehicle_info) &lt;- gsub(\"/\", \"_\", names(vehicle_info))\nnames(vehicle_info) &lt;- gsub(\"[()]\", \"\", names(vehicle_info))\nvehicle_info$Model_Year &lt;- gsub(\"Prelim\\\\.\\\\s*\", \"\", vehicle_info$Model_Year)\nnames(vehicle_info)\n\n\n [1] \"Model_Year\"               \"Regulatory_Class\"        \n [3] \"Vehicle_Type\"             \"Production_Share\"        \n [5] \"Real_World_MPG\"           \"Real_World_MPG_City\"     \n [7] \"Real_World_MPG_Hwy\"       \"Real_World_CO2_g_mi\"     \n [9] \"Real_World_CO2_City_g_mi\" \"Real_World_CO2_Hwy_g_mi\" \n[11] \"Weight_lbs\"               \"Horsepower_HP\"           \n[13] \"Footprint_sq._ft.\"       \n\n\nCode\n# Function to check if a column can be converted to numeric\nis_numeric &lt;- function(x) {\n  all(!is.na(as.numeric(x)))\n}\n\n# Convert columns with numeric values as characters to numeric type, keep others as character\nvehicle_info &lt;- vehicle_info %&gt;%\n  mutate_if(~is.character(.) && all(sapply(., is_numeric)), as.numeric, na.rm = TRUE)\n\ncolnames(vehicle_info)[colnames(vehicle_info) == \"Model_Year\"] &lt;- \"year\"\n\nvehicle &lt;- left_join(temperature, vehicle_info, by = join_by(year))\n\n# ==========Accumulate emission===============\ncumulative_emissions &lt;- read_csv(\"data/cumulative-co-emissions.csv\")\n\nco2 &lt;- cumulative_emissions %&gt;%\n  filter(Entity == \"United States\") \n\ncolnames(co2) &lt;- c(\"nation\", \"nation1\", \"year\", \"accu_emission\") \n\nemission &lt;- left_join(vehicle, co2, by = join_by(year))\n\n# ==========Accumulate emission===============\ntransport_emission_rate &lt;- read_csv(\"data/emission_percent_transport.csv\")\ncolnames(transport_emission_rate) &lt;- c(\"year\", \"trp_emission_rate\")\n\ntransport_emission &lt;- full_join(emission, transport_emission_rate, by = join_by(year))\n\n## ========== count car ================\ncount_car &lt;- read_csv(\"data/car2.csv\")\n\n# Estimate the number of cars for years ranging from 1900 to 2022 using interpolation\nestimated_cars &lt;- approx(count_car$year, count_car$car, xout = 1900:2022)$y \n\nestimated_cars_data &lt;- data.frame(year = 1900:2022, number_of_car = estimated_cars)\n\nestimate_n_cars &lt;- full_join(transport_emission, estimated_cars_data, by = join_by(year))\n\npercent_emission &lt;- estimate_n_cars %&gt;% \n  mutate(transport_emission = accu_emission*trp_emission_rate*0.01)\n\nfinal &lt;- percent_emission %&gt;%      \n       mutate(emission_n_car = transport_emission/number_of_car) %&gt;% subset(year &gt;= 1975)\n\n## ================ Filter data starting from the year 1975 ===============\nfinal_subset &lt;- final %&gt;%\n  group_by(Regulatory_Class, Vehicle_Type) %&gt;% \n  filter(Regulatory_Class == \"All\", Vehicle_Type == \"All\")"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/transport_emission.html#data-explore",
    "href": "posts/2023-12-9-transport-emission/transport_emission.html#data-explore",
    "title": "Vehicles emission affects to the climate change",
    "section": "Data explore",
    "text": "Data explore\n\nEarth Surface Temperature: This dataset, sourced from the EPA, provides information on the surface temperature, specifically focusing on Ferrnite.\nVehicle: Within EPA dataset, various pieces of information are available.\n\nReal_World_CO2_g_mi: This metric represents the emissions per car and is crucial for assessing the efficiency of vehicles in reducing CO2 emissions.\nRegulatory_Class: This classification helps determine whether a vehicle is a car or a truck.\n\nAccumulative Emission: This data originated from ‘Our World in Data’\nTransportation Emission: This dataset, obtained from the WorldBank, sheds light on emissions related to transportation.\nNumber of Vehicles: Unfortunately, there is no dataset available on the current website. However, projections for the years 1900, 1901, 2020, 2021, 2022, and 2023 have been included in this dataset. (Data availability)"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/transport_emission.html#highlights",
    "href": "posts/2023-12-9-transport-emission/transport_emission.html#highlights",
    "title": "Vehicles emission affects to the climate change",
    "section": "Highlights",
    "text": "Highlights\n\nLinear regression\nMulti-linear regression\nInteraction model\nLogit regression\nNull Hypothesis"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/transport_emission.html#analysis",
    "href": "posts/2023-12-9-transport-emission/transport_emission.html#analysis",
    "title": "Vehicles emission affects to the climate change",
    "section": "Analysis",
    "text": "Analysis\n\nLinear Regression Model: Earth’s Surface Temperature and Emissions from Transport\nThe linear regression model examining the relationship between Earth’s surface temperature and emissions from transport is represented as:\n\\[\\text{Ave. Earth surface Temperature} = \\beta_0 + \\beta_1 \\text{emisson from transport} + \\epsilon\\]\n\nPlot\n\n\nCode\n# Create a line plot to visualize the relationship between transportation emissions and Earth surface temperature over the years\n\n# Define the plot using ggplot\ntemp_per_emssion_by_year &lt;- ggplot(final, aes(x = transport_emission, y = temp)) +\n  geom_line() +\n  geom_smooth(linetype = \"dashed\") +\n  labs(x = \"Transportation Emission (CO2e tonne)\", y = \"Earth Surface Temperature (F)\", title = \"Emission per Temperature (from 1975)\") +\n  theme_minimal()\n\n# Display the plot\ntemp_per_emssion_by_year\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: Removed 57 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 57 rows containing missing values (`geom_line()`).\n\n\n\n\n\nThese findings suggest that around 32% of the variability in transportation emissions can be explained by Earth surface temperature. This aligns with our scatter plot, depicting a consistently strong positive relationship. The favorable F-statistics and low p-values further indicate that the model provides a good fit to the data. Due to low \\(R^2\\) , it need to find the better fit.\n\n\nCode\n# Fit a linear regression model\nmodel &lt;- lm(temp ~ transport_emission, data = final_subset)\n\n# Display a summary of the regression analysis\nsumm(model)\n\n\n\n\n\n\nObservations\n40 (7 missing obs. deleted)\n\n\nDependent variable\ntemp\n\n\nType\nOLS linear regression\n\n\n\n\n\n\n\n\nF(1,38)\n17.96\n\n\nR²\n0.32\n\n\nAdj. R²\n0.30\n\n\n\n\n\n\n\n\n\nEst.\nS.E.\nt val.\np\n\n\n\n\n(Intercept)\n-1.26\n0.48\n-2.65\n0.01\n\n\ntransport_emission\n0.00\n0.00\n4.24\n0.00\n\n\n\n Standard errors: OLS\n\n\n\n\n\n\n\n\n\n\n\nThis seems to exhibit a slightly better fit, as indicated by the higher $R^2$ and adjusted $R^2$ values. The Earth’s temperature increases with the rise in emissions from the transportation sector. Notably, there are significant errors associated with omitted variables, such as emissions from other sectors, including industry and power plants. Additionally, the scope needs to expand beyond the USA to encompass a global perspective.\n\n\nCode\n# Fit a linear regression model\nmodel_log &lt;- lm(temp ~ log(transport_emission), data = final_subset)\n\n# Display a summary of the regression analysis\nsumm(model_log)\n\n\n\n\n\n\nObservations\n40 (7 missing obs. deleted)\n\n\nDependent variable\ntemp\n\n\nType\nOLS linear regression\n\n\n\n\n\n\n\n\nF(1,38)\n19.98\n\n\nR²\n0.34\n\n\nAdj. R²\n0.33\n\n\n\n\n\n\n\n\n\nEst.\nS.E.\nt val.\np\n\n\n\n\n(Intercept)\n-48.56\n11.02\n-4.41\n0.00\n\n\nlog(transport_emission)\n1.96\n0.44\n4.47\n0.00\n\n\n\n Standard errors: OLS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLinear Regression Model: Emission per car and Year since Regulation\nThis model defines the how CAFE regulation effects to the transportation emission. This model explains the vehicle emission effects on CAFE regulation with number of vehicle.\n\\[\\text{Emission per car} = \\beta_0 + \\beta_2 \\text{Year since Regulation} + \\epsilon\\]\nIn this plot, emission per car decreasing since regulation started. There was no omitted variable in this model. Based on this information, we would like to how regulation affects on overall transport emission. This model proves that the model shows the interaction between the regulation and number of the car affects on the emission per car. Year since regulation and number of car are independent variables, but it is depended on emission per car variable.\n\n\nCode\n# Create a line plot using ggplot for 'emission_per_car' from the filtered data\none_car_per_emission&lt;- ggplot(final_subset, aes(x = year, y = Real_World_CO2_g_mi)) +\n  geom_jitter() +\n  geom_smooth(linetype = \"dashed\") +\n  labs(x = \"Year\",\n       y = \"Emission Economy (g/mi)\",\n       title = \"emission per car by year\") +\n  theme_minimal()\n\none_car_per_emission\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\nModel without Interaction: Total CO2 emission saving\n\\[\\text{emission per car} = \\beta_0 + \\beta_2 \\text{year since regulation} + \\beta_3 \\text{number of car} + \\epsilon\\]\n\\(\\beta_0\\): The predicted emission per car before the regulation is 476 grams per mile (mi/g).\n\\(\\beta_2\\): The emissions per car decrease by 5 grams per mile for every year since the regulation, holding the number of cars constant. The coefficient β₂ can be interpreted as the effect of an additional year since the regulation was implemented on emission savings or reduction of emission.\n\\(\\beta_3\\): This coefficient represents the estimated change in emission per car for each additional unit in the “number of car” variable while holding “year since regulation” constant. It implies that as the number of cars increases, overall emission is increasing.\n\nPlot\n\n\nCode\n# Create a scatter plot with a regression line\nggplot(final_subset, aes(x = year, y = Real_World_CO2_g_mi)) +\n  geom_jitter() +  # Scatter plot\n  geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE, color = \"blue\") +  # Regression line\n  labs(x = \"Year Since Regulation\", y = \"Emission Economy (g/mi)\", title = \"Regression Plot\") +\n  theme_minimal()\n\n\n\n\n\nIn this analysis, p-value is 9.1e-9, which is &lt; 0.05 can reject null hypothesis. R square is pretty low, which is 0.5.\n\n\nCode\n## Convert 'year' to (year - 1974): Year in 1975 becomes 1.\nfinal_subset$years &lt;- final_subset$year - 1974\n\n## Fit a linear model without interaction\nmodel_not_int &lt;- lm(Real_World_CO2_g_mi ~ years + number_of_car, data = final_subset)\nsumm(model_not_int, digits = 10)\n\n\n\n\n\n\nObservations\n47\n\n\nDependent variable\nReal_World_CO2_g_mi\n\n\nType\nOLS linear regression\n\n\n\n\n\n\n\n\nF(2,44)\n23.9688718881\n\n\nR²\n0.5214152731\n\n\nAdj. R²\n0.4996614218\n\n\n\n\n\n\n\n\n\nEst.\nS.E.\nt val.\np\n\n\n\n\n(Intercept)\n476.2446425522\n111.8001104335\n4.2597868706\n0.0001060282\n\n\nyears\n-5.1880489159\n3.8176342030\n-1.3589696236\n0.1810818273\n\n\nnumber_of_car\n0.0000000533\n0.0000001314\n0.4057541837\n0.6868896864\n\n\n\n Standard errors: OLS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInteraction model: Total CO2 emission saving\n\\[\\text{emission per car} = \\beta_0 + \\beta_2 \\text{year since regulation} + \\beta_3 \\text{number of car} +\\beta_4 \\text{year since regulation x number of car} + \\epsilon\\]\n\\(\\beta_4\\): This is interaction term implies the influence of the number of car on emission per car slightly changes as the year since regulation starts and it is defined the barometer of total CO2 emission saving.\nDecreasing the p-value compared to two models suggests that the interaction model between the year since regulation and the number of cars rejects the notion that their combined effect has no impact on understanding variations in CO2 emissions per car. Additionally, the higher \\(R^2\\) and adjusted \\(R^2\\) values signify that this interaction model better fits the data and captures a greater proportion of the variability in emissions compared to the model without the interaction term.\n\n\nCode\n## Fit a linear model with interaction\nmodel_int &lt;- lm(Real_World_CO2_g_mi ~ years + number_of_car + years:number_of_car, data = final_subset)\n\nsumm(model_int, digits = 10)\n\n\n\n\n\n\nObservations\n47\n\n\nDependent variable\nReal_World_CO2_g_mi\n\n\nType\nOLS linear regression\n\n\n\n\n\n\n\n\nF(3,43)\n24.5633246590\n\n\nR²\n0.6315021888\n\n\nAdj. R²\n0.6057930392\n\n\n\n\n\n\n\n\n\nEst.\nS.E.\nt val.\np\n\n\n\n\n(Intercept)\n378.7346753916\n102.8984504157\n3.6806645179\n0.0006442009\n\n\nyears\n-25.7574887204\n6.6647727476\n-3.8647212284\n0.0003704727\n\n\nnumber_of_car\n0.0000002524\n0.0000001292\n1.9534542357\n0.0572918953\n\n\nyears:number_of_car\n0.0000000068\n0.0000000019\n3.5841371809\n0.0008572249\n\n\n\n Standard errors: OLS\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogit regression using Categorical response variable: New and Old Vehicle\nWe will further study the new vehicles have effectively reducing emission. This is the showing two plots, which old vehicle before 2000 year model, and new vehicle after 2000 year model with the linear line.\n\\[\\operatorname{logit}(p)=\\log \\left(\\frac{p}{1-p}\\right)=\\beta_0 + \\beta_1 \\times \\text{car per emission} + \\beta_2 \\times \\text{Model} + \\varepsilon \\]\n\n\nCode\n# Create a new variable 'new_brand' based on the year\n# Filter the dataset to include only \"Car\" and \"Truck\" in Regulatory_Class\nfinal_vehicle_type &lt;- final %&gt;% \n  mutate(new_brand = ifelse(year &gt; 2000, 'new', 'old')) %&gt;%\n  filter(Regulatory_Class %in% c(\"Car\", \"Truck\"))\n\n# Create a jitter plot to show CO2 emissions and new/old classification\nggplot(data = final_vehicle_type, aes(y = new_brand, x = Real_World_CO2_g_mi)) + \n  geom_jitter(width = 0, height = 0.05, alpha = 0.8) +\n  labs(x = \"CO2 Emission per Car\", y = \"Brand New\") +\n  theme_minimal()\n\n\n\n\n\nThis involves showcasing two plots: one for older vehicles predating the year 2000 model and another for newer vehicles following the 2000 model year, each presented with a linear trend line.\n\n\nCode\n# Create a binary variable 'brand_new' based on 'new_brand'\nfinal_vehicle_type &lt;- final_vehicle_type %&gt;%\n  mutate(brand_new = ifelse(new_brand == \"new\", 1, 0))\n\n# Create a jitter plot to visualize CO2 emissions and brand new classification\nbinary &lt;- ggplot(data = final_vehicle_type, aes(y = brand_new, x = Real_World_CO2_g_mi)) + \n  geom_jitter(width = 0, height = 0.05, alpha = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(x = \"CO2 Emission per Car\", y = \"Brand New\") \nbinary\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nThe odds ratio of 0.99 indicates that for each one-unit increase in the ‘emission per car’ there is an approximate 1% reduction in emissions for newer vehicle models compared to older ones, tending to exhibit approximately 1% lower emissions concerning their CO2 levels compared to older models. This association highlights the potential for newer vehicle models to contribute slightly less to CO2 emissions in real-world scenarios compared to their older counterparts.\n\n\nCode\n# Create a logistic regression model for predicting 'brand_new'\nmod_new_car &lt;- glm(brand_new ~ Real_World_CO2_g_mi, data = final_vehicle_type, family = 'binomial') \n\n# Create a table summarizing the logistic regression model\nmod_new_car %&gt;% tab_model()\n\n\n\n\n\n \nbrand new\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n260.62\n61.89 – 1258.49\n&lt;0.001\n\n\nReal World CO2 g mi\n0.99\n0.98 – 0.99\n&lt;0.001\n\n\nObservations\n329\n\n\nR2 Tjur\n0.227\n\n\n\n\n\n\n\n\n\nVisualizing logistic regression\nThis is combining two models: linear regression model and logistic regression model, proving insight into both linear and non-linear relationships between old and new vehicles variables.\n\n\nCode\n# Create a binary plot with linear and logistic regression lines\nggplot(data = final_vehicle_type, aes(y = brand_new, x = Real_World_CO2_g_mi)) +\n  geom_jitter(width = 0, height = 0.05, alpha = 0.8) +\n  labs(x = \"CO2 Emission per Car\", y = \"Brand New\") +\n  geom_smooth(method = \"lm\", se = FALSE) +  # Add linear regression line\n  geom_smooth(method = \"glm\", se = FALSE, color = \"red\", \n              method.args = list(family = \"binomial\"))  # Add logistic regression line in red\n\n\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nLogistic regression: Truck and Car\nIn the context of environmental impact and vehicle emissions, there’s a growing concern about the differences in CO2 emissions per mile between different types of vehicles. To evaluate and address these concerns, a statistical analysis is conducted to compare the mean CO2 emissions per mile between two categories of vehicles: cars and trucks. This analysis aims to determine whether there’s a significant difference in CO2 emissions per mile between these vehicle types.\n\\[\\operatorname{logit}(p)=\\log \\left(\\frac{p}{1-p}\\right)=\\beta_0 + \\beta_1 \\times \\text{car per emission} + \\beta_2 \\times \\text{Truck} + \\varepsilon \\]\nThe coefficient related to ‘Regulatory_ClassTruck’ in the logistic regression model indicates an interesting finding. It suggests that the odds of a brand new car reducing its emissions are approximately 22 times higher compared to trucks. This translates to an approximate decrease of emissions by 2.8% in a new truck model compared to older models. This suggests that trucks have not significantly improved their efficiency over the span of nearly 50 years.\n\n\nCode\n# Fit the logistic regression model\nmod &lt;- glm(brand_new ~ Real_World_CO2_g_mi + Regulatory_Class, \n           data = final_vehicle_type, family = binomial)\n\n# Extract coefficients, exponentiate, and tidy the results\nexp(coef(mod)) \n\n\n          (Intercept)   Real_World_CO2_g_mi Regulatory_ClassTruck \n        39449.4440170             0.9728793            22.0806972 \n\n\n\nHistogram\nThis diagram clearly shows that the distribution of vehicle emissions is highly right-skewed compared to trucks. This indicates that the Environmental Protection Agency (EPA) has successfully regulated car emissions. However, there is a need for more effort to reduce emissions from trucks.\n\n\nCode\ngghistogram(final_vehicle_type, x = \"Real_World_CO2_g_mi\",\n   add = \"mean\", rug = TRUE,\n   color = \"Regulatory_Class\", fill = \"Regulatory_Class\",\n   palette = c(\"#00AFBB\", \"#E7B800\")) + \n  labs(title = \"Comparison of CO2 Emissions between Car and Truck Groups\")\n\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\n\n\n\nThis finding aligns with EPA’s Clean Truck Plan, unveiled on August 5, 2021. The plan aims to curb CO2 gas emissions and other harmful air pollutants from heavy-duty trucks. It outlines a series of three rulemakings that will come into effect for heavy-duty engines and vehicles starting from the model year 2027.\n\n\n\nHypothesis to comparing two models: Car and Truck\n\\[H_{0}: \\mu_{car} - \\mu_{Truck} = 0\\]\n\\[H_{A}: \\mu_{car} - \\mu_{Truck} \\neq 0\\]\nThe p-value of 2.22e-14 is less than any commonly used significance level (such as 0.05), indicating strong evidence to reject the null hypothesis. Therefore, there is strong evidence to suggest that there is a significant difference in CO2 emissions per mile between the car and truck.\nThere is a 95% confidence that the range between 84.8 and 127.7 includes the true difference in CO2 emissions per mile between cars and trucks.\n\n\nCode\n# in Regulatory_Class, \"All\", \"Car\", and \"Truck\", so only left \"Car\" and \"Truck\" in dataset. \nfinal_class &lt;- final %&gt;% filter(Regulatory_Class %in% c(\"Car\", \"Truck\"))\n\n# Separate data into 'Car' and 'Truck' groups\ncar &lt;- final_class %&gt;% filter(Regulatory_Class == \"Car\")\ntruck &lt;- final_class %&gt;% filter(Regulatory_Class == \"Truck\")\n\n# Conduct a t-test to compare CO2 emissions between 'Car' and 'Truck' groups\nt_test_result &lt;- t.test(truck$Real_World_CO2_g_mi, car$Real_World_CO2_g_mi, conf.level = 0.95)\n# Uncomment the next line to display the summary statistics using tab_model\nt_test_result\n\n\n\n    Welch Two Sample t-test\n\ndata:  truck$Real_World_CO2_g_mi and car$Real_World_CO2_g_mi\nt = 9.7546, df = 283.31, p-value &lt; 0.00000000000000022\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n  84.81797 127.70204\nsample estimates:\nmean of x mean of y \n  520.268   414.008"
  },
  {
    "objectID": "posts/2023-12-9-transport-emission/transport_emission.html#conclusion",
    "href": "posts/2023-12-9-transport-emission/transport_emission.html#conclusion",
    "title": "Vehicles emission affects to the climate change",
    "section": "Conclusion",
    "text": "Conclusion\nThe analysis highlights the impact of Earth’s surface temperature and regulatory standards, like Corporate Average Fuel Economy (CAFE), on reducing emissions per car. Logistic regression underscores the lower emissions of newer vehicles, emphasizing the need for ongoing technological advancements. The significant disparity in emissions between cars and trucks calls for targeted efforts to enhance truck efficiency.\n\nFuture work\nFuture endeavors should focus on a global perspective, assess policy effectiveness, explore technological advancements for emissions reduction, and monitor long-term trends. Continuous policy evaluation is crucial, considering initiatives like the Clean Truck Plan, while strengthening public awareness and advocacy efforts will foster sustainable practices in transportation."
  },
  {
    "objectID": "posts/2023-12-14-marine/index.html#highlight",
    "href": "posts/2023-12-14-marine/index.html#highlight",
    "title": "Mapping the global potential for marine aquaculture",
    "section": "Highlight",
    "text": "Highlight\n\nMerging vector and raster data\nResampling raster data\nRasterizing and Masking raster data\nIdentifying overlay areas using lapp\nConducting map algebra"
  },
  {
    "objectID": "posts/2023-12-14-marine/index.html#peruvian-anchoveta",
    "href": "posts/2023-12-14-marine/index.html#peruvian-anchoveta",
    "title": "Mapping the global potential for marine aquaculture",
    "section": "Peruvian Anchoveta",
    "text": "Peruvian Anchoveta\nTo enhance workflow efficiency, focus on the Peruvian Anchoveta, a species thriving within the depth range of -3 to -80 meters and temperatures spanning 13°C to 23°C. It is noteworthy that the primary habitats of Peruvian Anchoveta are located in South California, suggesting a preference for warmer waters at specific depths. Explore these precise environmental preferences to gain profound insights into the ecological distribution of Peruvian Anchoveta.\n\ntest &lt;- function(sst_low, sst_high, depth_low, depth_high, species){\n\n# Classify SST data: Set suitable values to 1 and unsuitable values to NA\nrcl_sst&lt;- matrix(c(-Inf, sst_low, NA, \n                     sst_low, sst_high, 1, \n                    sst_high, Inf, NA), \n              ncol = 3, byrow = TRUE) #anything outside of range is NA\n\nrcl_depth &lt;- matrix(c(-Inf, depth_low, NA,\n                      depth_low, depth_high , 1,\n                       depth_high , Inf, NA),\n                    ncol = 3, byrow = TRUE)\n\n#reclassifying raster using a reclassification matrix\nsuitable_sst &lt;- classify(mean_sst_c,\n                     rcl = rcl_sst, \n                     include.lowest = TRUE)\n\nsuitable_depth &lt;- classify(depth_resampled,\n                     rcl = rcl_depth,\n                     include.lowest = TRUE)\n\n#define function\nmult_fun &lt;- function(x, y) {\n  return(x*y)}\n\n#find locations that satisfy both conditions\noverlay_suitable &lt;- lapp(c(suitable_sst, suitable_depth), mult_fun)\n\n# making area to grid cells and mask it \nwc_rast &lt;- rasterize(wc, overlay_suitable, \n                           field = \"rgn\", na.rm = TRUE)\n\nwc_mask &lt;- mask(wc_rast,overlay_suitable)\n\n# find area of each suitable zones with zonal() in each of 5 regions of EEZ\n## no need to use zonal \nwc_zonal &lt;- zonal(overlay_suitable, wc_mask, na.rm = TRUE, fun = \"sum\")\ncolnames(wc_zonal)[colnames(wc_zonal) == \"lyr1\"] &lt;- \"count_pixel\"\n\n# bring the pixel size \npixel_area_km &lt;- 16.38252\n\n## use zonal\nwc_zonal_summary &lt;- wc_zonal %&gt;% \n  group_by(rgn) %&gt;% \n  mutate(suitable_area = count_pixel*pixel_area_km)\n\n# join the two dataframe \nwc_suitable_EEZ &lt;- full_join(wc, wc_zonal_summary, by = \"rgn\") %&gt;% \n  mutate(percentage_suitable = (suitable_area/area_km2 * 100),\n         .before = geometry) \n\ntmap_mode(\"view\")\ntmap_last()\n\n#map for total suitable area by region\n\narea_map &lt;- tm_basemap(\"OpenStreetMap.Mapnik\") +\n  tm_shape(wc_suitable_EEZ) +\n  tm_polygons(col = 'suitable_area',\n              palette = 'Blues',\n              alpha = 0.75,\n              style = \"jenks\",\n              border.col = 'black',\n              title = paste0(\"Total \" , species, \" Suitable Area\")) +\n  tm_text(\"rgn\", size = 0.54) +\n  tm_scale_bar(position = c(\"left\", \"right\"))\n\npercent_area_map &lt;- tm_basemap(\"OpenStreetMap.Mapnik\") +\n  tm_shape(wc_suitable_EEZ) +\n  tm_polygons(col = 'percentage_suitable',\n              palette = 'Oranges',\n              alpha = 0.75,\n              style = \"jenks\",\n              border.col = 'black',\n              title = paste0(\"Total \",species ,\" percent Suitable Area\")) +\n  tm_text(\"rgn\", size = 0.54) +\n  tm_scale_bar(position = c(\"left\", \"right\"))\n\ntmap_arrange(area_map, percent_area_map)\n\n}\n\ntest(13, 23, -80, -3, \"Peruvian Anchoveta\")\n\ntmap mode set to interactive viewing"
  },
  {
    "objectID": "posts/2023-12-14-marine/index.html#conclusion",
    "href": "posts/2023-12-14-marine/index.html#conclusion",
    "title": "Mapping the global potential for marine aquaculture",
    "section": "Conclusion",
    "text": "Conclusion\nThis study focuses on the analysis of marine organisms beneath the ocean surface. The temperature and depth of the sea significantly impact marine life. The dataset used in this analysis provides valuable information for understanding the sea environment. While our assessments of the suitability of aquaculture are based on the present ocean conditions, it’s essential to acknowledge that the environment is currently experiencing unprecedented changes. Future efforts to evaluate how climate risks may affect aquaculture potential, considering expected shifts in regional ocean temperatures and productivity, will need to improve long-term predictions and offer more nuanced insights into how climate change will impact individual species.(Gentry et al)"
  },
  {
    "objectID": "posts/2023-12-14-marine/index.html#reference",
    "href": "posts/2023-12-14-marine/index.html#reference",
    "title": "Mapping the global potential for marine aquaculture",
    "section": "Reference",
    "text": "Reference\n\nRebecca. R, Mapping the global potential for marine aquaculture, Nature Ecology & Evolution volume1, pages1317–1324 (2017)"
  }
]